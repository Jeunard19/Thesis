{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/primitives/button.js","webpack:///./src/primitives/fab_button.js","webpack:///./src/primitives/fab_button_small.js","webpack:///./src/primitives/switch.js","webpack:///./src/primitives/toast.js","webpack:///./src/primitives/checkbox.js","webpack:///./src/primitives/radio.js","webpack:///./src/primitives/text-input.js","webpack:///./src/primitives/number-input.js","webpack:///./src/primitives/int-input.js","webpack:///./src/primitives/password-input.js","webpack:///./src/primitives/scroll-pane.js","webpack:///./src/primitives/renderer.js","webpack:///./src/components/text.js","webpack:///./src/components/btn.js","webpack:///./src/components/icon.js","webpack:///./src/components/rounded.js","webpack:///./src/components/ripple.js","webpack:///./src/components/switch.js","webpack:///./src/components/toast.js","webpack:///./src/components/scroll-pane.js","webpack:///./src/components/mouse-shim.js","webpack:///./src/components/double-click.js","webpack:///./src/components/checkbox.js","webpack:///./src/components/radio.js","webpack:///./src/components/border.js","webpack:///./src/components/curved-plane.js","webpack:///./src/components/color-picker.js","webpack:///./src/components/modal.js","webpack:///./src/components/renderer.js","webpack:///./src/components/yoga.js","webpack:///./src/index.js","webpack:///./src/utils.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AFRAME","registerPrimitive","utils","extendDeep","primitives","getMeshMixin","defaultComponents","geometry","primitive","width","height","material","color","shader","ui-btn","ui-rounded","borderRadius","ui-ripple","size","x","y","clampToSquare","zIndex","text","font","align","zOffset","wrapCount","alphaTest","mappings","transparent","font-color","ripple-color","ripple-size","ripple-z-index","text-value","wrap-count","border-radius","curve-segments","disabled","radius","segments","fadeDelay","duration","ui-icon","icon-color","src","ui-switch","opacity","curveSegments","ui-checkbox","indeterminate","ui-radio","radiusInner","radiusOuter","segmentsTheta","selected","ui-text","placeHolder","ui-double-click","place-holder","type","ui-scroll-pane","scroll-z-offset","handle-color","scroll-padding","look-controls-el","look-controls-component","ui-renderer","ui-panel","panel-position","panel-size","render-resolution","debug-raycaster","fps","intersectable-class","CanvasInput","registerComponent","schema","default","lineFocusColor","lineBlurColor","disabledColor","fontFamily","fontColor","intersectableClass","[object Object]","this","backing","document","createElement","setAttribute","data","el","appendChild","textMaterial","THREE","MeshBasicMaterial","textPlane","Mesh","PlaneGeometry","object3D","add","position","set","underLine","addEventListener","e","focus","select","blurHandler","blur","setValue","is_focussed","sceneEl","canvas_input","render","map","needsUpdate","is_float","indexOf","keyCode","ctrlKey","metaKey","test","preventDefault","numberOnly","setupCanvasInput","image","Image","renderCanvas","toDataURL","texture","Texture","minFilter","LinearFilter","setClippingPlanes","selectText","UI","isChanging","uuid","resetCanvasInput","onkeydown","floatOnly","renderer","domElement","_content_clips","clippingPlanes","clipShadows","removeEventListener","new_value","stoppedChanging","borderWidth","canvas","getElementById","input_settings","fontSize","padding","backgroundColor","placeHolderColor","boxShadow","innerShadow","hoverHeight","activeHeight","defaultZ","z","mouseEnter","mouseDown","mouseUp","mouseLeave","_this","tween","is_clicked","resetAnimation","start_z","from","to","callback","complete","TWEEN","Tween","onUpdate","onComplete","easing","Easing","Exponential","Out","start","icon","TextureLoader","load","mesh","getObject3D","roundedRectShape","Shape","ctx","moveTo","lineTo","quadraticCurveTo","metadata","parameters","ShapeGeometry","emit","fadeDuration","rippleGeometry","CircleGeometry","Math","max","ripple","clone","scale","click","content_clips","Plane","Vector3","isRippling","setRippleClips","tweenSize","tweenOpacity","applyMatrix4","matrixWorld","concat","delay","progressColor","handleColor","handleDisabledColor","railColor","switchDuration","handleZIndex","setDisabled","handleEl","railEl","getRailObject","clickHandler","detail","tweenHandle","tweenProgress","traverse","child","progress","toastEl","message","originalPosition","getAttribute","closeTween","stop","shorten","scrollPadding","scrollZOffset","scrollHandleColor","cameraEl","lookControlsComponent","setupElements","container","querySelector","scrollBarWidth","rail","handle","localClippingEnabled","playPauseCamera","method","components","mousemove","mouseMove","isDragging","handlePos","worldToLocal","intersection","point","backgroundPanel","endScroll","scroll","updateContent","setupMouseWheelScroll","setContent","updateMatrixWorld","body","noAutoReload","firstChild","yoga_node","removeChild","Promise","resolve","loadedWrapper","insertAdjacentHTML","updateContentClips","currentUuid","generateUUID","setChildClips","Yoga","initialiseYoga","calculateLayout","DIRECTION_LTR","content_height","Number","NEGATIVE_INFINITY","updateYoga","handleSize","clamp","pos","positionY","min","scroll_pos","scroll_perc","evt","deltaY","node","properties","setWidth","setHeight","EDGE_LEFT","EDGE_RIGHT","EDGE_TOP","EDGE_BOTTOM","EDGE_ALL","replace","parent","tagName","componentName","substr","toLowerCase","Node","setupYogaNode","getProperties","setJustifyContent","JUSTIFY_FLEX_START","setFlexDirection","FLEX_DIRECTION_ROW","setAlignContent","ALIGN_AUTO","setFlexWrap","WRAP_WRAP","parentElement","setMargin","insertChild","getChildCount","setPadding","slice","children","forEach","classList","contains","getComputedLeft","getComputedTop","getComputedWidth","getComputedHeight","highest","isRawShaderMaterial","onBeforeCompile","vertexParts","vertexShader","split","vertexMainIndex","splice","length","join","fragmentParts","fragmentShader","fragmentMainIndex","clipping","clearTimeout","fontRenderTimeout","setTimeout","raycaster","onMouseWheel","emitMouseEvent","Date","getTime","lastMouseMoveTime","eventType","event","intersections","cursorEl","timeout","last_click","now","selectedColor","unselectedColor","setupLines","setSelected","setTransform","animateSelected","topLine","leftLine","bottomLine","rightLine","line","is_vertical","selectedRadius","filled_circle","Color","parentNode","querySelectorAll","filter","ring","deselect","isSelecting","numberOfPoints","roundedRect","setObject3D","isHole","shapeCtx","Path","holes","push","depth","browser_pane","planePoints","CubicBezierCurve3","vertices","getPoints","abs","edgeI","pointI","backingColor","backingColorBottom","targetEl","setupColorWheel","setupBrightnessSlider","setupColorPreview","setupBacking","setupEvents","open","close","selectCallback","tweenPickerScale","then","circleBacking","className","flatShading","fog","side","planeBacking","planeBackingBottom","buttonConfirm","hex","getHex","buttonCancel","hexValue","colorPreview","hsv","h","v","colorWheel","ShaderMaterial","uniforms","brightness","brightnessSlider","color1","color2","brightnessResetLeft","brightnessResetRight","updateColor","rgb","hsvToRgb","g","b","getHexString","isMouseDown","polarPosition","sqrt","angle","PI","atan2","f","q","floor","round","modal","main","modalPanel","mainComponents","modalComponents","pause","close_buttons","pauseRender","tweenModalScale","play","playRender","uiPanel","lookControlsEl","panelPosition","panelSize","renderResolution","debugRaycaster","setupBackDrop","meshEl","setupUIPanel","remove","camera","PerspectiveCamera","renderTarget","WebGLRenderTarget","antialias","stoppedRendering","isRendering","Raycaster","helper","SphereGeometry","lastRenderTime","isFrozen","time","isPaused","isAnimatingBackground","backdrop","fromScale","toScale","mouseEvent","lastMoveEvent","mousedown","mouseup","mousewheel","mouse","localPoint","deltaX","raycastIntersections","setFromCamera","intersectObjects","prevIntersectionEls","intersectionEls","intersectionPoint","copy","currentEvent","intersectionEl","delta","vrModeEnabled","vr","enabled","alignContent","alignItems","alignSelf","display","flex","flexDirection","flexWrap","aspectRatio","overflow","justifyContent","border","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","marginLeft","marginRight","marginTop","marginBottom","marginAuto","marginAutoLeft","marginAutoRight","marginAutoTop","marginAutoBottom","marginPercent","marginPercentLeft","marginPercentRight","marginPercentTop","marginPercentBottom","flexBasis","flexBasisPercent","flexGrow","flexShrink","maxHeight","minHeight","maxWidth","minWidth","maxHeightPercent","minHeightPercent","maxWidthPercent","minWidthPercent","positionLeft","positionRight","positionTop","positionBottom","positionPercent","positionPercentLeft","positionPercentRight","positionPercentTop","positionPercentBottom","widthAuto","heightAuto","widthPercent","heightPercent","setProperties","mapPropertyToEnum","charAt","toUpperCase","propertiesObj","enums","edge","count","ALIGN_COUNT","auto","flex-start","ALIGN_FLEX_START","center","ALIGN_CENTER","flex-end","ALIGN_FLEX_END","stretch","ALIGN_STRETCH","baseline","ALIGN_BASELINE","space-between","ALIGN_SPACE_BETWEEN","space-around","ALIGN_SPACE_AROUND","dimension","DIMENSION_COUNT","DIMENSION_WIDTH","DIMENSION_HEIGHT","direction","DIRECTION_COUNT","inherit","DIRECTION_INHERIT","ltr","rtl","DIRECTION_RTL","DISPLAY_COUNT","DISPLAY_FLEX","none","DISPLAY_NONE","EDGE_COUNT","left","top","right","bottom","EDGE_START","end","EDGE_END","horizontal","EDGE_HORIZONTAL","vertical","EDGE_VERTICAL","all","experimental","EXPERIMENTAL_FEATURE_COUNT","flex-basis","EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS","FLEX_DIRECTION_COUNT","column","FLEX_DIRECTION_COLUMN","column-reverse","FLEX_DIRECTION_COLUMN_REVERSE","row","reverse","FLEX_DIRECTION_ROW_REVERSE","JUSTIFY_COUNT","JUSTIFY_CENTER","JUSTIFY_FLEX_END","between","JUSTIFY_SPACE_BETWEEN","around","JUSTIFY_SPACE_AROUND","evenly","JUSTIFY_SPACE_EVENLY","logLevel","LOG_LEVEL_COUNT","error","LOG_LEVEL_ERROR","warn","LOG_LEVEL_WARN","info","LOG_LEVEL_INFO","debug","LOG_LEVEL_DEBUG","verbose","LOG_LEVEL_VERBOSE","fatal","LOG_LEVEL_FATAL","measureMode","MEASURE_MODE_COUNT","undefined","MEASURE_MODE_UNDEFINED","exactly","MEASURE_MODE_EXACTLY","at-most","MEASURE_MODE_AT_MOST","nodeType","NODE_TYPE_COUNT","NODE_TYPE_DEFAULT","NODE_TYPE_TEXT","OVERFLOW_COUNT","visible","OVERFLOW_VISIBLE","hidden","OVERFLOW_HIDDEN","OVERFLOW_SCROLL","positionType","POSITION_TYPE_COUNT","relative","POSITION_TYPE_RELATIVE","absolute","POSITION_TYPE_ABSOLUTE","printOptions","PRINT_OPTIONS_COUNT","layout","PRINT_OPTIONS_LAYOUT","style","PRINT_OPTIONS_STYLE","PRINT_OPTIONS_CHILDREN","unit","UNIT_COUNT","UNIT_UNDEFINED","UNIT_POINT","percent","UNIT_PERCENT","UNIT_AUTO","WRAP_COUNT","no-wrap","WRAP_NO_WRAP","wrap","wrap-reverse","WRAP_WRAP_REVERSE","version","console","log","changesDetected","is_changeing","scene","string","ref","isFirstOrLastChange","index","window","a_ui_button","a_ui_fab_button","a_ui_fab_button_small","a_ui_switch","a_ui_toast","a_ui_checkbox","a_ui_radio","a_ui_text_input","a_ui_number_input","a_ui_int_input","a_ui_password_input","a_ui_scroll_pane","a_ui_renderer","btn","rounded","switch","toast","scroll_pane","mouse_shim","double_click","checkbox","radio","curvedPlane","colorPicker","yoga_properties"],"mappings":"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","file":"aframe-material-collection.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","/* global AFRAME */\r\n/**\r\n * Button Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-button\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-button', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'plane',\r\n            width: 0.5,\r\n            height: 0.175\r\n        },\r\n        material: {\r\n            color: '#009688',\r\n            shader: 'flat',\r\n        },\r\n        \"ui-btn\":{},\r\n        \"ui-rounded\":{borderRadius:0.0025},\r\n        \"ui-ripple\":{size:{x:0.5,y:0.175},clampToSquare:true,zIndex:0.001},\r\n        text:{\r\n            font:'roboto',\r\n            align:'center',\r\n            zOffset:0.002,\r\n            wrapCount:10,\r\n            alphaTest:0.4\r\n        }\r\n    },\r\n    mappings: {\r\n        height: 'geometry.height',\r\n        width: 'geometry.width',\r\n        color: 'material.color',\r\n        transparent: 'material.transparent',\r\n        \"font-color\":'text.color',\r\n        \"ripple-color\":'ui-ripple.color',\r\n        \"ripple-size\":'ui-ripple.size',\r\n        \"ripple-z-index\":'ui-ripple.zIndex',\r\n        \"text-value\": 'text.value',\r\n        \"wrap-count\":'text.wrapCount',\r\n        \"border-radius\":\"ui-rounded.borderRadius\",\r\n        \"curve-segments\":\"ui-rounded.curveSegments\",\r\n        disabled:'ui-btn.disabled'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Floating Action Button Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-fab-button\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-fab-button', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'circle',\r\n            radius: 0.1,\r\n            segments:6\r\n        },\r\n        material: {\r\n            color: '#009688',\r\n            shader: 'flat',\r\n        },\r\n        \"ui-btn\":{},\r\n        \"ui-ripple\":{size:{x:0.1,y:0.1},zIndex:0.002,fadeDelay:300,duration:500},\r\n        \"ui-icon\":{size:{x:0.105,y:0.105}}\r\n    },\r\n    mappings: {\r\n        radius: 'geometry.radius',\r\n        color: 'material.color',\r\n        \"icon-color\": 'ui-icon.color',\r\n        transparent: 'material.transparent',\r\n        src: 'ui-icon.src',\r\n        \"ripple-color\":'ui-ripple.color',\r\n        \"ripple-size\":'ui-ripple.size',\r\n        \"ripple-z-index\":'ui-ripple.zIndex',\r\n        disabled:'ui-btn.disabled'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Floating Action Button Small Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-fab-button-small\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-fab-button-small', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'circle',\r\n            radius: 0.075,\r\n            segments:6\r\n        },\r\n        material: {\r\n            color: '#009688',\r\n            shader: 'flat',\r\n        },\r\n        \"ui-btn\":{},\r\n        \"ui-ripple\":{size:{x:0.125,y:0.125},zIndex:-0.001,color:'#ff0000'},\r\n        \"ui-icon\":{size:{x:0.075,y:0.075}, src:'icons/sort_white_64dp.png'}\r\n    },\r\n    mappings: {\r\n        radius: 'geometry.radius',\r\n        color: 'material.color',\r\n        \"icon-color\": 'ui-icon.color',\r\n        transparent: 'material.transparent',\r\n        src: 'ui-icon.src',\r\n        \"ripple-color\":'ui-ripple.color',\r\n        \"ripple-size\":'ui-ripple.size',\r\n        \"ripple-z-index\":'ui-ripple.zIndex',\r\n        disabled:'ui-btn.disabled'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Switch Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-switch\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-switch', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-switch\":{}\r\n    },\r\n    mappings: {\r\n        value: 'ui-switch.value',\r\n        disabled: 'ui-switch.disabled',\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Toast Message Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-toast\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-toast', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'plane',\r\n            width: 0.5,\r\n            height: 0.2\r\n        },\r\n        material: {\r\n            color: '#010e0f',\r\n            shader: 'flat',\r\n            transparent:true,\r\n            opacity: 0.8\r\n        },\r\n        \"ui-rounded\":{borderRadius:0.01,curveSegments:3},\r\n        text:{\r\n            font:'roboto',\r\n            value:'Toast Message!',\r\n            align:'center',\r\n            zOffset:0.002,\r\n            wrapCount:20,\r\n        }\r\n    },\r\n    mappings: {\r\n        height: 'geometry.height',\r\n        width: 'geometry.width',\r\n        color: 'material.color',\r\n        transparent: 'material.transparent',\r\n        \"font-color\":'text.color',\r\n        \"text-value\": 'text.value',\r\n        \"wrap-count\":'text.wrapCount',\r\n        \"border-radius\":\"ui-rounded.borderRadius\",\r\n        \"curve-segments\":\"ui-rounded.curveSegments\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Checkbox Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-checkbox\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-checkbox', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-checkbox\":{\r\n\r\n        },\r\n        \"ui-ripple\":{\r\n            size:{x:0.1,y:0.1},\r\n            zIndex:-0.001,\r\n            color:'#afafaf'\r\n        }\r\n    },\r\n    mappings: {\r\n        value: 'ui-checkbox.value',\r\n        disabled: 'ui-checkbox.disabled',\r\n        indeterminate:'ui-checkbox.indeterminate'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Radio Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-radio\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-radio', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-radio\":{},\r\n        \"geometry\":{\r\n            primitive:'ring',\r\n            radiusInner:0.0575,\r\n            radiusOuter:0.0675,\r\n            segmentsTheta:6\r\n        },\r\n        \"material\":{\r\n            shader:'flat',\r\n            color:'#afafaf'\r\n        },\r\n        \"ui-ripple\":{\r\n            size:{x:0.1,y:0.1},\r\n            zIndex:-0.001,\r\n            color:'#afafaf'\r\n        }\r\n    },\r\n    mappings: {\r\n        color:'ui-radio.selectedColor',\r\n        value: 'ui-radio.value',\r\n        selected: 'ui-radio.selected',\r\n        disabled: 'ui-radio.disabled',\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Text Input Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-text-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-text-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            placeHolder:'Text...'\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Number Input Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-number-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-number-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            type:'number',\r\n            placeHolder:'Number...'\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Integer Input Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-int-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-int-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            type:'int',\r\n            placeHolder:'Whole Number...'\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n *  Password Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-password-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-password-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            type:'password',\r\n            placeHolder:''\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Scroll Pane Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-scroll-pane\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-scroll-pane', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-scroll-pane\":{\r\n\r\n        }\r\n    },\r\n    mappings: {\r\n        width:\"ui-scroll-pane.width\",\r\n        height:\"ui-scroll-pane.height\",\r\n        \"scroll-z-offset\":\"ui-scroll-pane.scrollZOffset\",\r\n        \"handle-color\":\"ui-scroll-pane.scrollHandleColor\",\r\n        \"scroll-padding\":\"ui-scroll-pane.scrollPadding\",\r\n        \"look-controls-el\":\"ui-scroll-pane.cameraEl\",\r\n        \"look-controls-component\":\"ui-scroll-pane.lookControlsComponent\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Renderer Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-renderer\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-renderer', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-renderer\":{}\r\n    },\r\n    mappings: {\r\n        \"ui-panel\":\"ui-renderer.uiPanel\",\r\n        \"look-controls-el\":\"ui-renderer.lookControlsEl\",\r\n        \"look-controls-component\":\"ui-renderer.lookControlsComponent\",\r\n        \"panel-position\":\"ui-renderer.panelPosition\",\r\n        \"panel-size\":\"ui-renderer.panelSize\",\r\n        \"render-resolution\":\"ui-renderer.renderResolution\",\r\n        \"debug-raycaster\":\"ui-renderer.debugRaycaster\",\r\n        \"fps\":\"ui-renderer.fps\",\r\n        \"intersectable-class\":\"ui-renderer.intersectableClass\",\r\n    }\r\n}));","/* global AFRAME,THREE */\r\n/**\r\n * Text input component Component for aframe-material-collection. Includes support for number/int only input.\r\n * @namespace aframe-material-collection\r\n * @component ui-text\r\n * @author Shane Harris\r\n */\r\n\r\nif (typeof CanvasInput === 'undefined') {\r\n    throw 'aframe-material-collection requires CanvasInput to be loaded first - <script src=\"https://cdn.rawgit.com/shaneharris/CanvasInput/master/CanvasInput.js\"></script>';\r\n}\r\nmodule.exports = AFRAME.registerComponent('ui-text', {\r\n    schema: {\r\n        width:{type:'number',default:0.5},\r\n        height:{type:'number',default:0.1},\r\n        value: {default: ''},\r\n        type: {default: 'text'},\r\n        lineFocusColor: {default: '#009688'},\r\n        lineBlurColor: {default: '#cfcfcf'},\r\n        disabledColor: {default: '#afafaf'},\r\n        disabled: {type: 'boolean', default: false},\r\n        fontFamily: {default: 'Roboto'},\r\n        fontColor: {default: '#4f4f4f'},\r\n        placeHolder: {default: 'Text...'},\r\n        intersectableClass: {default: 'intersectable'},\r\n    },\r\n    init(){\r\n\r\n        // Setup text input box.\r\n        this.backing = document.createElement('a-plane');\r\n        this.backing.setAttribute('width',this.data.width);\r\n        this.backing.setAttribute('height',this.data.height);\r\n        this.backing.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        this.backing.setAttribute('opacity',0);\r\n        this.backing.setAttribute('scale','1 1 0');\r\n        this.el.appendChild(this.backing);\r\n        this.textMaterial = new THREE.MeshBasicMaterial();\r\n        this.textPlane = new THREE.Mesh(new THREE.PlaneGeometry(this.data.width,this.data.height),this.textMaterial);\r\n        this.el.object3D.add(this.textPlane);\r\n        this.textPlane.position.set(0,0,0.0001);\r\n\r\n        // Add under line for showing focus state.\r\n        this.underLine = document.createElement('a-plane');\r\n        this.underLine.setAttribute('width',this.data.width-0.05);\r\n        this.underLine.setAttribute('height',0.005);\r\n        this.underLine.setAttribute('position','0 -0.05 0.001');\r\n        this.underLine.setAttribute('class','no-yoga-layout');\r\n        this.underLine.setAttribute('shader','flat');\r\n        this.underLine.setAttribute('color',this.data.disabled?this.data.disabledColor:this.data.lineBlurColor);\r\n        this.el.appendChild(this.underLine);\r\n        // Handle click to focus the input text.\r\n        this.el.addEventListener('click',e=>this.focus());\r\n        // Double click to select all text.\r\n        this.el.addEventListener('dblclick',e=>this.select());\r\n        // Handle the blur event for setting the input value.\r\n        this.blurHandler = ()=>this.blur();\r\n        this.setValue();\r\n    },\r\n    tick(){\r\n        // If this element is focused then render the canvas input.\r\n        if(!this.is_focussed)return;\r\n        this.el.sceneEl.canvas_input.render();\r\n        this.textMaterial.map.needsUpdate = true;\r\n    },\r\n    numberOnly(e,is_float){\r\n        // Stolen from stack overflow.\r\n        if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\r\n            // Allow: Ctrl/cmd+A\r\n            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: Ctrl/cmd+C\r\n            (e.keyCode === 67 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: Ctrl/cmd+X\r\n            (e.keyCode === 88 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: home, end, left, right\r\n            (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        // Regex to allow float/int input - float inpit allows \"0.\" for as you type numbers - need to remove on blur.\r\n        // TODO: Need to remove trailing dot on blur to make a valid number.\r\n        if(e&&!((is_float?/^\\d*((\\.)|(\\.\\d+))?$/g:/^\\d*?$/g).test(this.el.sceneEl.canvas_input.value()+e.key))){\r\n            e.preventDefault();\r\n        }\r\n    },\r\n    floatOnly(e){\r\n        return this.numberOnly(e,true);\r\n    },\r\n    setValue(){\r\n        this.setupCanvasInput();\r\n        this.el.sceneEl.canvas_input.render();\r\n        // Grap a frame from the canvas input wiith the current input value for displaying when not in focus.\r\n        let image = new Image();\r\n        image.src = this.el.sceneEl.canvas_input.renderCanvas().toDataURL(\"image/png\");\r\n        let texture = new THREE.Texture(image);\r\n        texture.needsUpdate = true;\r\n        texture.minFilter = THREE.LinearFilter;\r\n        this.textMaterial = new THREE.MeshBasicMaterial({map:texture});\r\n        this.textPlane.material = this.textMaterial;\r\n        // Update clipping planes for the new material.\r\n        this.setClippingPlanes();\r\n\r\n    },\r\n    select(){\r\n        // Select the text on double click.\r\n        this.el.sceneEl.canvas_input.selectText();\r\n    },\r\n    focus(){\r\n        // Start Changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        // Reset the global canvas input to this current inputs settings.\r\n        this.resetCanvasInput();\r\n        //this.el.focus();\r\n        this.el.sceneEl.canvas_input.focus();\r\n        this.el.sceneEl.canvas_input.onkeydown(e=>{\r\n            // Prevent input for integer and float only.\r\n            if(this.data.type===\"number\"){\r\n                this.floatOnly(e);\r\n            }else if(this.data.type===\"int\"){\r\n                this.numberOnly(e);\r\n            }\r\n        });\r\n        if(this.data.value === this.data.placeHolder){\r\n            // reset value if the same as placeholder.\r\n            this.el.sceneEl.canvas_input.value('');\r\n        }\r\n        // Set the current input to the input canvas texture.\r\n        this.textMaterial = new THREE.MeshBasicMaterial({map:new THREE.Texture(this.el.sceneEl.canvas_input.renderCanvas())});\r\n        this.textPlane.material = this.textMaterial;\r\n        // Update clipping planes for new material.\r\n        this.setClippingPlanes();\r\n        // Set the underline to the focussed state.\r\n        this.underLine.setAttribute('color',this.data.lineFocusColor);\r\n        this.textMaterial.map.minFilter = THREE.LinearFilter;\r\n        // Set focused flag\r\n        this.is_focussed = true;\r\n        // Add mouse down event handler for blur event to the render dom element.\r\n        this.el.sceneEl.renderer.domElement.addEventListener('mousedown',this.blurHandler);\r\n    },\r\n    setClippingPlanes(){\r\n        // If content clips are set for the scroll plane, then set them to the current material and set clipping enabled.\r\n        if(this.el._content_clips){\r\n            this.textMaterial.clippingPlanes = this.el._content_clips;\r\n            this.textMaterial.clipShadows = true;\r\n        }\r\n    },\r\n    blur(){\r\n        // Clicked off the input text field.\r\n        this.is_focussed = false;\r\n        this.el.sceneEl.renderer.domElement.removeEventListener('mousedown',this.blurHandler);\r\n        let new_value = this.el.sceneEl.canvas_input.value();\r\n        // Update the current valuue.\r\n        this.data.value = new_value;\r\n        // Reset the under line color to blur state.\r\n        this.underLine.setAttribute('color',this.data.lineBlurColor);\r\n        // Blur the canvas element to grab a frame without the carret.\r\n        this.el.sceneEl.canvas_input.blur();\r\n        // Set the input current value image.\r\n        this.setValue();\r\n        // Stop Changes\r\n        UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n    },\r\n    resetCanvasInput(){\r\n        // Set the canvas input to this current inputs settings.\r\n        if(this.el.sceneEl.canvas_input) {\r\n            this.el.sceneEl.canvas_input.width((this.data.width - 0.1) * 300);\r\n            this.el.sceneEl.canvas_input.fontFamily(this.data.fontFamily);\r\n            this.el.sceneEl.canvas_input.fontColor(this.data.fontColor);\r\n            this.el.sceneEl.canvas_input.placeHolder(this.data.placeHolder);\r\n            this.el.sceneEl.canvas_input.value(this.data.value);\r\n            this.el.sceneEl.canvas_input.borderWidth(0);\r\n        }\r\n    },\r\n    updateSchema(){\r\n        if(this.data){\r\n            // Reset the current settings if changed programatically.\r\n            this.resetCanvasInput();\r\n        }\r\n    },\r\n    setupCanvasInput(){\r\n        // Setup the input canvas if not already setup\r\n        let canvas = document.getElementById('textCanvas');\r\n        canvas.width = (this.data.width)*300;\r\n        this.resetCanvasInput();\r\n        if(this.el.sceneEl.canvas_input){\r\n            return;\r\n        }\r\n        canvas.height = 45;\r\n        let input_settings = {\r\n            canvas:canvas,\r\n            fontSize:18,\r\n            fontFamily: this.data.fontFamily,\r\n            fontColor: this.data.fontColor,\r\n            width:(this.data.width-0.1)*300,\r\n            padding: 12,\r\n            borderWidth: 0,\r\n            borderRadius:0,\r\n            backgroundColor: '#fff',\r\n            placeHolder:this.data.placeHolder,\r\n            placeHolderColor:'#cfcfcf',\r\n            boxShadow: '0px 0px 0px #fff',\r\n            innerShadow:'0px 0px 0px rgba(255,255,255, 1)',\r\n            value:this.data.value\r\n        };\r\n        this.el.sceneEl.canvas_input = new CanvasInput(input_settings);\r\n    }\r\n});","/* global AFRAME,TWEEN */\r\n/**\r\n * Button base Component for aframe-material-collection. This is used as the base component for all the button primitives.\r\n * @namespace aframe-material-collection\r\n * @component ui-btn\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-btn', {\r\n    schema:{\r\n        duration:{type:'int',default:250},\r\n        hoverHeight:{type:'number',default:0.01},\r\n        activeHeight:{type:'number',default:-0.001},\r\n        disabled:{type:'boolean',default:false}\r\n    },\r\n    updateSchema(){\r\n      // TODO: handle updates to the button state, disabled flag here.\r\n    },\r\n    init() {\r\n        // Store the current button z value for animating mouse events\r\n        this.defaultZ = this.el.object3D.position.z;\r\n        // register input events for interaction\r\n        if(!this.data.disabled){\r\n            this.el.addEventListener('mouseenter', e=>this.mouseEnter(e));\r\n            this.el.addEventListener('mousedown', e=>this.mouseDown(e));\r\n            this.el.addEventListener('mouseup', e=>this.mouseUp(e));\r\n            this.el.addEventListener('mouseleave', e=>this.mouseLeave(e));\r\n        }\r\n    },\r\n    mouseEnter(e){\r\n        const _this = this;\r\n        // Lift the button up for hover animation\r\n        this.tween(this.defaultZ,this.defaultZ+this.data.hoverHeight,function(){\r\n            _this.el.object3D.position.z = this.x;\r\n        },function(){\r\n            _this.el.object3D.position.z = _this.defaultZ+_this.data.hoverHeight;\r\n        });\r\n        //UI.utils.preventDefault(e)\r\n    },\r\n    mouseLeave(e){\r\n        // Ignore mouse leave event if the button was clicked - mouse up already resets to default state.\r\n        if(this.is_clicked){\r\n            return this.is_clicked = false;\r\n        }\r\n        // Reset button state from hover\r\n        this.resetAnimation(this.defaultZ+this.data.hoverHeight);\r\n        //UI.utils.preventDefault(e)\r\n    },\r\n    mouseUp(e){\r\n        this.is_clicked = true;\r\n        // Reset button state from pressed\r\n        this.resetAnimation(this.defaultZ+this.data.activeHeight);\r\n        UI.utils.preventDefault(e)\r\n    },\r\n    mouseDown(e){\r\n        const _this = this;\r\n        // Press state animation from hovered\r\n        this.tween(this.defaultZ+this.data.hoverHeight,this.defaultZ+this.data.activeHeight,function(){\r\n            _this.el.object3D.position.z = this.x;\r\n        },function(){\r\n            _this.el.object3D.position.z = _this.defaultZ+_this.data.activeHeight;\r\n        });\r\n        UI.utils.preventDefault(e)\r\n    },\r\n    resetAnimation(start_z){\r\n        let _this = this;\r\n        this.tween(start_z,this.defaultZ,function(){\r\n            _this.el.object3D.position.z = this.x;\r\n        },function(){\r\n            _this.el.object3D.position.z = _this.defaultZ;\r\n        })\r\n    },\r\n    tween(from,to,callback,complete){\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        return new TWEEN.Tween({x:from})\r\n            .to({ x: to}, this.data.duration)\r\n            .onUpdate(callback)\r\n            .onComplete(function(){\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.el.object3D.uuid)\r\n                return complete.call(this);\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * A component to load an icon and set some defaults for positioning and transparency.\r\n * @namespace aframe-material-collection\r\n * @component ui-icon\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-icon', {\r\n    schema: {\r\n        src: {default: 'icons/send_white_64dp.png'},\r\n        size:{type:'vec2',default:{x:0.1,y:0.1}},\r\n        zIndex:{type:'number',default:0.003},\r\n        color:{default:'#fff'}\r\n    },\r\n    init() {\r\n        this.icon = new THREE.Mesh(new THREE.PlaneGeometry(this.data.size.x,this.data.size.y),new THREE.MeshBasicMaterial({color:this.data.color,alphaTest:0.4,transparent:true,map:new THREE.TextureLoader().load(this.data.src)}));\r\n        this.icon.position.set(0,0,this.data.zIndex);\r\n        this.el.object3D.add(this.icon);\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * Rounded corners Component for aframe-material-collection. Expects an a-plane entity.\r\n * @namespace aframe-material-collection\r\n * @component ui-rounded\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-rounded', {\r\n    schema: {\r\n        borderRadius: {type: 'number', default: 0.01},\r\n        curveSegments:{type: 'int', default: 1},\r\n    },\r\n    init() {\r\n        let mesh = this.el.getObject3D('mesh');\r\n        let roundedRectShape = new THREE.Shape();\r\n        // Draw the Rounded rectangle shape centered in the object - from three.js shapes example.\r\n        ( function roundedRect( ctx, x, y, width, height, radius ) {\r\n            ctx.moveTo( x, y + radius );\r\n            ctx.lineTo( x, y + height - radius );\r\n            ctx.quadraticCurveTo( x, y + height, x + radius, y + height );\r\n            ctx.lineTo( x + width - radius, y + height );\r\n            ctx.quadraticCurveTo( x + width, y + height, x + width, y + height - radius );\r\n            ctx.lineTo( x + width, y + radius );\r\n            ctx.quadraticCurveTo( x + width, y, x + width - radius, y );\r\n            ctx.lineTo( x + radius, y );\r\n            ctx.quadraticCurveTo( x, y, x, y + radius );\r\n        } )( roundedRectShape, -mesh.geometry.metadata.parameters.width/2, -mesh.geometry.metadata.parameters.height/2, mesh.geometry.metadata.parameters.width, mesh.geometry.metadata.parameters.height, this.data.borderRadius );\r\n        // Update the geometry.\r\n        mesh.geometry = new THREE.ShapeGeometry(roundedRectShape,this.data.curveSegments);\r\n        // Emit rounded-loaded event once the geometry has been updated.\r\n        this.el.emit('rounded-loaded', null, false);\r\n    }\r\n});","/* global AFRAME,TWEEN,THREE */\r\n/**\r\n * Ripple Component for aframe-material-collection. Add a ripple to an entity with options for controlling\r\n * clamping the animation and offsetting the ripple z position to place on top or bottom\r\n * @namespace aframe-material-collection\r\n * @component ui-ripple\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-ripple',{\r\n    schema:{\r\n        color: {default: '#fff'},\r\n        duration:{type:'int',default:1000},\r\n        fadeDuration:{type:'int',default:750},\r\n        fadeDelay:{type:'int',default:250},\r\n        clampToSquare:{type:'boolean',default:false},\r\n        size:{type:'vec2',default:{x:1,y:1}},\r\n        zIndex:{type:'number',default:-0.001},\r\n        segments:{type:'int',default:6}\r\n    },\r\n    init(){\r\n        // Setup circle geometry for ripple effect\r\n        this.rippleGeometry = new THREE.CircleGeometry(Math.max(this.data.size.x,this.data.size.y),this.data.segments);\r\n        this.ripple = new THREE.Mesh(this.rippleGeometry.clone(),new THREE.MeshBasicMaterial({color:this.data.color,transparent:true, opacity:0.4,alphaTest:0.1}));\r\n        this.ripple.scale.set(0.00001,0.00001,0.00001);\r\n        this.el.object3D.add(this.ripple);\r\n        this.el.addEventListener('mousedown',this.click.bind(this));\r\n        this.ripple.position.set(0,0,this.data.zIndex);\r\n        // Set clipping planes if clamping to square\r\n        if(this.data.clampToSquare){\r\n\r\n            this.content_clips = [\r\n                new THREE.Plane( new THREE.Vector3( 0, 1, 0 ), (this.data.size.y/2) ),\r\n                new THREE.Plane( new THREE.Vector3( 0, -1, 0 ), (this.data.size.y/2) ),\r\n                new THREE.Plane( new THREE.Vector3( -1, 0, 0 ), (this.data.size.x/2) ),\r\n                new THREE.Plane( new THREE.Vector3( 1, 0, 0 ), (this.data.size.x/2) )\r\n            ];\r\n        }\r\n    },\r\n    click(e){\r\n        if(this.isRippling){\r\n            // Throttle clicks.\r\n            return e.preventDefault();\r\n        }\r\n        this.isRippling = true;\r\n        // Set clipping planes if clamping to square\r\n        if(this.data.clampToSquare){\r\n            this.setRippleClips(this.ripple.material);\r\n        }\r\n        // Animate the size of the circle ripple from the center of the entity.\r\n        this.tweenSize(this.ripple.geometry);\r\n        // Fade the circle out as it ripples.\r\n        this.tweenOpacity(this.ripple.material);\r\n    },\r\n    setRippleClips(){\r\n        // update content clips world positions from this current element.\r\n        this.content_clips[0].set(new THREE.Vector3( 0, 1, 0 ), (this.data.size.y/2));\r\n        this.content_clips[1].set(new THREE.Vector3( 0, -1, 0 ), (this.data.size.y/2));\r\n        this.content_clips[2].set(new THREE.Vector3( -1, 0, 0 ), (this.data.size.x/2));\r\n        this.content_clips[3].set(new THREE.Vector3( 1, 0, 0 ), (this.data.size.x/2));\r\n        //this.el.sceneEl.object3D.updateMatrixWorld();\r\n        this.content_clips[0].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[1].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[2].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[3].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.ripple.material.clippingPlanes = this.el._content_clips?this.el._content_clips.concat(this.content_clips):this.content_clips;\r\n        this.ripple.material.clipShadows = true;\r\n        this.ripple.material.needsUpdate = true;\r\n    },\r\n    tweenSize(geometry){\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,_this.ripple.uuid);\r\n        new TWEEN.Tween({x:0.00001})\r\n            .to({ x: 1}, this.data.duration)\r\n            .onUpdate(function(){\r\n                _this.ripple.scale.set(this.x,this.x,this.x);\r\n            })\r\n            .onComplete(()=>{\r\n                _this.ripple.scale.set(0.00001,0.00001,0.00001);\r\n                // Reset throttle flag.\r\n                this.isRippling = false;\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.ripple.uuid);\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    },\r\n    tweenOpacity(material){\r\n        new TWEEN.Tween({x:0.4})\r\n            .to({ x: 0}, this.data.fadeDuration)\r\n            .delay(this.data.fadeDelay)\r\n            .onUpdate(function(){\r\n                material.opacity = this.x;\r\n            })\r\n            .onComplete(()=>{\r\n                material.opacity = 0.4;\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    }\r\n});","/* global AFRAME,TWEEN,THREE */\r\n/**\r\n * Switch Component for aframe-material-collection. Includes a disabled state.\r\n * @namespace aframe-material-collection\r\n * @component ui-switch\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-switch', {\r\n    schema: {\r\n        value: {type:'boolean',default: false},\r\n        disabled:{type:'boolean',default: false},\r\n        progressColor:{default:'#4db6ac'},\r\n        handleColor:{default:'#009688'},\r\n        handleDisabledColor:{default:'#afafaf'},\r\n        railColor:{default:'#fff'},\r\n        switchDuration:{type:'int',default: 350},\r\n        handleZIndex:{type:'number',default:0.01},\r\n        intersectableClass: {default: 'intersectable'},\r\n    },\r\n    updateSchema(){\r\n        if(this.data){\r\n            if(this.data.disabled){\r\n                if(this.data.value){\r\n                    this.data.value=false;\r\n                    this.click();\r\n                }\r\n            }else{\r\n                this.click();\r\n            }\r\n            this.setDisabled();\r\n        }\r\n    },\r\n    init() {\r\n        this.width = 0.3;\r\n        this.height = 0.1;\r\n        // Setup handle circle entity.\r\n        this.handleEl = document.createElement('a-circle');\r\n        this.handleEl.setAttribute('radius',0.055);\r\n        this.handleEl.setAttribute('color',this.data.handleColor);\r\n        this.handleEl.setAttribute('shader','flat');\r\n        this.handleEl.setAttribute('ui-ripple','size:0.1 0.1;color:#999;fadeDelay:300;duration:500');\r\n        this.handleEl.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        this.handleEl.setAttribute('position','-0.05 0 '+this.data.handleZIndex);\r\n        this.handleEl.setAttribute('segments',6);\r\n        this.el.appendChild(this.handleEl);\r\n\r\n        // Setup rail entity.\r\n        this.railEl = document.createElement('a-plane');\r\n        this.railEl.setAttribute('width','0.15');\r\n        this.railEl.setAttribute('height','0.05');\r\n        this.railEl.setAttribute('shader','flat');\r\n        this.railEl.setAttribute('ui-rounded','borderRadius:0.025');\r\n        this.railEl.setAttribute('color',this.data.railColor);\r\n        this.railEl.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        this.el.appendChild(this.railEl);\r\n        // Wait for the rounded edge on the rail to load to clone the geometry for the\r\n        // selected progress bar part of the rail\r\n        this.railEl.addEventListener('rounded-loaded',()=>{\r\n            this.getRailObject(this.railEl.object3D);\r\n            this.setDisabled();\r\n            this.click();\r\n        });\r\n        this.clickHandler = e=>{\r\n            this.data.value = !this.data.value;\r\n            this.click();\r\n            // Prevent default behaviour of event\r\n            if(e.detail.preventDefault){\r\n                e.detail.preventDefault();\r\n            }\r\n        };\r\n    },\r\n    setDisabled(){\r\n        // Add / Remove click handlers based on disabled state.\r\n        if(this.data.disabled){\r\n            this.handleEl.removeEventListener('mousedown',this.clickHandler);\r\n            this.handleEl.setAttribute('color',this.data.handleDisabledColor);\r\n        }else{\r\n            this.handleEl.addEventListener('mousedown',this.clickHandler);\r\n            this.handleEl.setAttribute('color',this.data.handleColor);\r\n        }\r\n    },\r\n    click(){\r\n        // Emit the current selected value\r\n        this.el.emit('ui-switch-changed',this.data.value);\r\n        // Animate the switch handle and the progress bar.\r\n        this.tweenHandle();\r\n        this.tweenProgress();\r\n    },\r\n    getRailObject(object){\r\n        // Get the rounded shape geomtery.\r\n        object.traverse(child=>{\r\n            if(child.geometry&&child.geometry.type===\"ShapeGeometry\"){\r\n                this.progress = new THREE.Mesh(child.geometry.clone(),new THREE.MeshBasicMaterial({color:this.data.progressColor}));\r\n                this.progress.position.set(-0.075,0,0.001);\r\n                this.progress.scale.set(0.00001,1,1);\r\n                this.el.object3D.add(this.progress);\r\n            }\r\n        });\r\n    },\r\n    tweenProgress(){\r\n        if(this.progress){\r\n            new TWEEN.Tween(this.progress.position)\r\n                .to(new THREE.Vector3(this.data.value?0:-0.075,0,0.001), this.data.switchDuration)\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n            new TWEEN.Tween(this.progress.scale)\r\n                .to(new THREE.Vector3(this.data.value?1:0.00001,1,1), this.data.switchDuration)\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        }\r\n    },\r\n    tweenHandle(){\r\n        if(this.handleEl){\r\n            // Start changes\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            new TWEEN.Tween(this.handleEl.object3D.position)\r\n                .to(new THREE.Vector3(this.data.value?0.05:-0.05,0,this.data.handleZIndex), this.data.switchDuration)\r\n                .onComplete(()=>{\r\n                    // Stop changes\r\n                    UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        }\r\n    }\r\n});","/* global AFRAME,TWEEN,THREE */\r\n/**\r\n * Toast Component for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @component ui-toast\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-toast', {\r\n    schema: {\r\n        toastEl:{type:'selector'},\r\n        message:{default:'Hello from toast!'}\r\n    },\r\n    init() {\r\n        this.originalPosition = this.data.toastEl.getAttribute('position').clone();\r\n        this.el.addEventListener('mousedown',()=>{\r\n            if(this.closeTween)this.closeTween.stop();\r\n            UI.utils.isChanging(this.el.sceneEl,this.data.toastEl.object3D.uuid);\r\n            this.data.toastEl.setAttribute('visible',true);\r\n            this.data.toastEl.setAttribute('text-value',UI.utils.shorten(this.data.message,85));\r\n            let _this = this;\r\n            new TWEEN.Tween({x:this.originalPosition.x,y:this.originalPosition.y-0.1,z:this.originalPosition.z})\r\n                .to(this.originalPosition, 350)\r\n                .onUpdate(function(){\r\n                    _this.data.toastEl.setAttribute('position',this);\r\n                })\r\n                .onComplete(()=>{\r\n                    // Stop changes\r\n                    this.closeTween = new TWEEN.Tween({x:0.8})\r\n                        .delay(2000)\r\n                        .to({x:0.0001}, 350)\r\n                        .onUpdate(function(){\r\n                            _this.data.toastEl.setAttribute('opacity',this.x);\r\n                        })\r\n                        .onComplete(()=>{\r\n                            this.data.toastEl.setAttribute('visible',false);\r\n                            UI.utils.stoppedChanging(this.data.toastEl.object3D.uuid);\r\n                        })\r\n                        .easing(TWEEN.Easing.Exponential.Out).start();\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n            new TWEEN.Tween({x:0.0001})\r\n                .to({x:0.8}, 350)\r\n                .onUpdate(function(){\r\n                    _this.data.toastEl.setAttribute('opacity',this.x);\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        });\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * Scroll Pane for aframe-material-collection. Expects\r\n * @namespace aframe-material-collection\r\n * @component ui-scroll-pane\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-scroll-pane', {\r\n    schema: {\r\n        height:{type:'number',default:1.2},\r\n        width:{type:'number',default:2.9},\r\n        scrollPadding:{type:'number',default:0.05},\r\n        scrollZOffset:{type:'number',default:0},\r\n        scrollHandleColor:{default:'#009688'},\r\n        intersectableClass:{default:'intersectable'},\r\n        cameraEl:{type:'selector'},\r\n        lookControlsComponent:{default:'look-controls'},\r\n    },\r\n    init() {\r\n        // Setup scroll bar and panel backing.\r\n        this.setupElements();\r\n        // Grab content container.\r\n        this.container = this.el.querySelector('.container');\r\n        if(typeof this.container === 'undefined'){\r\n            throw 'ui-scroll-pane needs an entity inside it with the class \"container\" - <a-entity class=\"container\"></a-entity>';\r\n        }\r\n        // Setup scroll bar.\r\n        this.scrollBarWidth = this.rail.getAttribute('width');\r\n        this.container.setAttribute('position',(-this.data.width/2)+' '+((this.data.height/2))+' 0');\r\n        this.rail.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' 0 '+(this.data.scrollZOffset+0.0002));\r\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' 0 '+(this.data.scrollZOffset+0.0005));\r\n        this.el.sceneEl.renderer.localClippingEnabled = true;\r\n\r\n        // Setup content clips.\r\n        this.content_clips = [\r\n            new THREE.Plane( new THREE.Vector3( 0, 1, 0 ), (this.data.height/2) ),\r\n            new THREE.Plane( new THREE.Vector3( 0, -1, 0 ), (this.data.height/2) ),\r\n            new THREE.Plane( new THREE.Vector3( -1, 0, 0 ), (this.data.width/2) ),\r\n            new THREE.Plane( new THREE.Vector3( 1, 0, 0 ), (this.data.width/2) )\r\n        ];\r\n        // Pause/play camera look controls\r\n        const playPauseCamera = method=>{\r\n            if(this.data.cameraEl&&this.data.cameraEl.components[this.data.lookControlsComponent]){\r\n                this.data.cameraEl.components[this.data.lookControlsComponent][method]();\r\n            }\r\n        };\r\n        // Setup mouse move handler for scrolling and updating scroll handle.\r\n        const mousemove = e=>this.mouseMove(e);\r\n        // Start scroll\r\n        this.handle.addEventListener('mousedown',e=>{\r\n            // Pause look controls to allow scrolling\r\n            playPauseCamera('pause');\r\n            this.isDragging = true;\r\n            // Store the start point offset\r\n            this.handlePos = this.handle.object3D.worldToLocal(e.detail.intersection.point).y;\r\n            this.backgroundPanel.addEventListener('ui-mousemove',mousemove);\r\n            // Start changes\r\n            UI.utils.isChanging(this.el.sceneEl,this.handle.object3D.uuid);\r\n            // Prevent default behaviour of event\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        // End scroll\r\n        const endScroll = e=>{\r\n            if(this.isDragging){\r\n                this.backgroundPanel.removeEventListener('ui-mousemove',mousemove);\r\n                // Play look controls once scrolling is finished\r\n                playPauseCamera('play');\r\n                this.isDragging = false;\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(this.handle.object3D.uuid);\r\n                // Prevent default behaviour of event\r\n                UI.utils.preventDefault(e);\r\n            }\r\n        };\r\n        this.backgroundPanel.addEventListener('mouseup',endScroll);\r\n        this.backgroundPanel.addEventListener('mouseleave',endScroll);\r\n        // // Handle clicks on rail to scroll\r\n        this.rail.addEventListener('mousedown',e=>{\r\n\r\n            UI.utils.isChanging(this.el.sceneEl,this.handle.object3D.uuid);\r\n            // Pause look controls\r\n            this.isDragging = true;\r\n            // Reset handle pos to center of handle\r\n            this.handlePos = 0;\r\n            // Scroll immediately and register mouse move events.\r\n            this.scroll(this.rail.object3D.worldToLocal(e.detail.intersection.point).y);\r\n            this.backgroundPanel.addEventListener('ui-mousemove',mousemove);\r\n            // Prevent default behaviour of event\r\n            UI.utils.preventDefault(e);\r\n        });\r\n\r\n        // Setup content clips after the scene is loaded to be able to access all entity materials\r\n\r\n        // update content clips world positions from this current element.\r\n\r\n        this.updateContent();\r\n        this.el.emit('scroll-pane-loaded');\r\n        this.setupMouseWheelScroll();\r\n\r\n        // Expose methods to the element to update/set the content of the scroll pane.\r\n        this.el.setContent = this.setContent.bind(this);\r\n        this.el.updateContent = this.updateContent.bind(this);\r\n    },\r\n    updateContentClips(){\r\n        this.el.sceneEl.object3D.updateMatrixWorld();\r\n        // update content clips world positions from this current element.\r\n        this.content_clips[0].set(new THREE.Vector3( 0, 1, 0 ), (this.data.height/2));\r\n        this.content_clips[1].set(new THREE.Vector3( 0, -1, 0 ), (this.data.height/2));\r\n        this.content_clips[2].set(new THREE.Vector3( -1, 0, 0 ), (this.data.width/2));\r\n        this.content_clips[3].set(new THREE.Vector3( 1, 0, 0 ), (this.data.width/2));\r\n        //this.el.sceneEl.object3D.updateMatrixWorld();\r\n        this.content_clips[0].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[1].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[2].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[3].applyMatrix4(this.el.object3D.matrixWorld);\r\n\r\n    },\r\n    setContent(body,noAutoReload){\r\n        if(this.container) {\r\n            // Remove all children in the container and all yoga nodes\r\n            while (this.container.firstChild) {\r\n                let child = this.container.firstChild;\r\n                if (this.container.yoga_node&&child.yoga_node) {\r\n                    this.container.yoga_node.removeChild(child.yoga_node);\r\n                }\r\n                this.container.removeChild(child);\r\n            }\r\n            // Set the content in the scroll pane.\r\n            return new Promise(resolve=>{\r\n                let loadedWrapper = document.createElement('a-entity');\r\n                loadedWrapper.setAttribute('visible',false)\r\n                loadedWrapper.insertAdjacentHTML('afterbegin',body);\r\n                loadedWrapper.addEventListener('loaded',e=>{\r\n                    // Trigger an update to redraw scrollbars and fire change events.\r\n                    if(!noAutoReload)this.updateContent();\r\n                    resolve(loadedWrapper);\r\n                    loadedWrapper.setAttribute('visible',true)\r\n                });\r\n                this.container.appendChild(loadedWrapper);\r\n            })\r\n        }\r\n    },\r\n    updateContent(){\r\n        this.updateContentClips();\r\n        this.currentUuid = THREE.Math.generateUUID();\r\n        UI.utils.isChanging(this.el.sceneEl,this.currentUuid);\r\n        this.setChildClips();\r\n        this.container.object3D.position.y = this.data.height/2;\r\n        if(typeof Yoga !== 'undefined')this.initialiseYoga(this.container,this.data.width*100);\r\n        this.container.yoga_node.calculateLayout(this.data.width*100, 'auto', Yoga.DIRECTION_LTR);\r\n        this.content_height = Number.NEGATIVE_INFINITY;\r\n        if(typeof Yoga !== 'undefined')this.updateYoga(this.container);\r\n        this.handleSize = THREE.Math.clamp((this.data.height/this.content_height),0.1,1);\r\n        this.handle.setAttribute('height',this.data.height*this.handleSize);\r\n        this.handle.setAttribute('width',this.handleSize===1?0.00000001:0.1);\r\n        this.rail.setAttribute('width',this.handleSize===1?0.00000001:0.1);\r\n        this.rail.setAttribute('color',this.handleSize===1?'#efefef':'#fff');\r\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' '+(this.data.height-(this.data.height*this.handleSize))/2+' '+(this.data.scrollZOffset+0.0005));\r\n\r\n    },\r\n    mouseMove(e){\r\n        if(this.isDragging){\r\n            let pos = this.rail.object3D.worldToLocal(e.detail.intersection.point);\r\n            this.scroll(pos.y-this.handlePos);\r\n        }\r\n    },\r\n    scroll(positionY){\r\n        let min = (-this.data.height/2)+(this.data.height*this.handleSize)/2;\r\n        let max = (this.data.height/2)-(this.data.height*this.handleSize)/2;\r\n        // Set scroll position with start point offset.\r\n        let scroll_pos = THREE.Math.clamp(positionY,min,max);\r\n        let scroll_perc = 1-((scroll_pos-min)/(max-min));\r\n        this.container.object3D.position.y = ((this.content_height-this.data.height)*scroll_perc)+(this.data.height/2);\r\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' '+scroll_pos+' '+(this.data.scrollZOffset+0.0005));\r\n    },\r\n    setupMouseWheelScroll(){\r\n        this.backgroundPanel.addEventListener('ui-mousewheel',e=>{\r\n            if(this.handleSize!==1){\r\n                // Start changes\r\n                UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n                this.scroll(this.handle.getAttribute('position').y+(e.detail.evt.deltaY<0?0.1:-0.1));\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n                UI.utils.preventDefault(e);\r\n            }\r\n        });\r\n    },\r\n    setupElements(){\r\n        // Setup background with mouse input to catch mouse move events when not exactly over the scroll bar.\r\n        this.backgroundPanel = document.createElement('a-plane');\r\n        this.backgroundPanel.setAttribute('class','background '+this.data.intersectableClass);\r\n        this.backgroundPanel.setAttribute('width',this.data.width+1);\r\n        this.backgroundPanel.setAttribute('height',this.data.height+1);\r\n        this.backgroundPanel.setAttribute('position','0 0 -0.013');\r\n        this.backgroundPanel.setAttribute('opacity',0.0001);//\r\n        this.backgroundPanel.setAttribute('transparent',true);\r\n\r\n        this.el.appendChild(this.backgroundPanel);\r\n\r\n        // Add scroll bar rail.\r\n        this.rail = document.createElement('a-plane');\r\n        this.rail.setAttribute('class','rail '+this.data.intersectableClass);\r\n        this.rail.setAttribute('width',0.1);\r\n        this.rail.setAttribute('height',this.data.height);\r\n        this.rail.setAttribute('shader','flat');\r\n        this.el.appendChild(this.rail);\r\n\r\n        // Add scroll bar handle.\r\n        this.handle = document.createElement('a-plane');\r\n        this.handle.setAttribute('class','handle '+this.data.intersectableClass);\r\n        this.handle.setAttribute('width',0.1);\r\n        this.handle.setAttribute('height',this.data.height);\r\n        this.handle.setAttribute('color',this.data.scrollHandleColor);\r\n        this.handle.setAttribute('shader','flat');\r\n        this.el.appendChild(this.handle);\r\n    },\r\n    setupYogaNode(node,width,height,properties){\r\n        // Parse yoga properties and call the yoga methods to setup this layout node.\r\n        if(!properties.hasOwnProperty('setWidth'))node.setWidth(width);\r\n        if(!properties.hasOwnProperty('setHeight'))node.setHeight(height);\r\n        for(let method in properties){\r\n            if(properties.hasOwnProperty(method)&&method.indexOf('Edge')===-1){\r\n                if([\"setMarginLeft\",\"setMarginPercentLeft\",\"setPaddingLeft\",\"setBorderLeft\",\"setPositionLeft\",\"setPositionPercentLeft\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_LEFT,properties[method]);\r\n                }else if([\"setMarginRight\",\"setMarginPercentRight\",\"setPaddingRight\",\"setBorderRight\",\"setPositionRight\",\"setPositionPercentRight\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_RIGHT,properties[method]);\r\n                }else if([\"setMarginTop\",\"setMarginPercentTop\",\"setPaddingTop\",\"setBorderTop\",\"setPositionTop\",\"setPositionPercentTop\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_TOP,properties[method]);\r\n                }else if([\"setMarginBottom\",\"setMarginPercentBottom\",\"setPaddingBottom\",\"setBorderBottom\",\"setPositionBottom\",\"setPositionPercentBottom\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_BOTTOM,properties[method]);\r\n                }else if([\"setMargin\",\"setMarginPercent\",\"setPadding\",\"setBorder\",\"setPosition\",\"setPositionPercent\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_ALL,properties[method]);\r\n                }else if(method.indexOf('setMarginAuto')>-1){\r\n                    let side = method.replace('setMarginAuto','');\r\n                    switch(side){\r\n                        case \"\":\r\n                            node[method](Yoga.EDGE_ALL);\r\n                            break;\r\n                        case \"Left\":\r\n                            node[method](Yoga.EDGE_LEFT);\r\n                            break;\r\n                        case \"Right\":\r\n                            node[method](Yoga.EDGE_RIGHT);\r\n                            break;\r\n                        case \"Top\":\r\n                            node[method](Yoga.EDGE_TOP);\r\n                            break;\r\n                        case \"Bottom\":\r\n                            node[method](Yoga.EDGE_BOTTOM);\r\n                            break;\r\n                    }\r\n                }else if([\"setWidthAuto\",\"setHeightAuto\"]\r\n                .indexOf(method)>-1) {\r\n                    node[method]();\r\n                }else{\r\n                    node[method](properties[method]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    initialiseYoga(parent){\r\n        // Traverse the tree and setup Yoga layout nodes with default settings\r\n        // or settings specified in the elements yoga properties component.\r\n        parent = parent||this.container;\r\n        // Automatically detect the entity width / height by the element tagname.\r\n        let width = 0,height = 0;\r\n        switch(parent.tagName){\r\n            case \"A-TEXT\":\r\n            case \"A-TRIANGLE\":\r\n            case \"A-UI-TEXT-INPUT\":\r\n            case \"A-UI-NUMBER-INPUT\":\r\n            case \"A-UI-INT-INPUT\":\r\n            case \"A-UI-PASSWORD-INPUT\":\r\n                width = parent.getAttribute('width');\r\n                height = parent.getAttribute('height');\r\n                break;\r\n            case \"A-UI-BUTTON\":\r\n            case \"A-PLANE\":\r\n            case \"A-ENTITY\":\r\n                width = Number(parent.components.geometry?parent.components.geometry.data.width:parent.getAttribute('width'));\r\n                height = Number(parent.components.geometry?parent.components.geometry.data.height:parent.getAttribute('height'));\r\n                break;\r\n            case \"A-UI-FAB-BUTTON\":\r\n            case \"A-UI-FAB-BUTTON-SMALL\":\r\n            case \"A-CIRCLE\":\r\n                width = Number(parent.components.geometry?parent.components.geometry.data.radius*2:(parent.getAttribute('radius')||0)*2);\r\n                height = width;\r\n                break;\r\n            case \"A-RING\":\r\n                width = Number(parent.components.geometry?parent.components.geometry.data[\"radius-outer\"]*2:(parent.getAttribute('radius-outer')||0)*2);\r\n                height = width;\r\n                break;\r\n            case \"A-UI-SWITCH\":\r\n            case \"A-UI-CHECKBOX\":\r\n            case \"A-UI-RADIO\":\r\n                let componentName = parent.tagName.substr(2).toLowerCase();\r\n                width = parent.components[componentName].width;\r\n                height = parent.components[componentName].height;\r\n                break;\r\n        }\r\n\r\n        if(!parent.yoga_node){\r\n            parent.yoga_node = Yoga.Node.create();\r\n            if(parent.components[\"ui-yoga\"]){\r\n                this.setupYogaNode(parent.yoga_node,width ? width * 100 : 'auto',height ? height * 100 : 'auto',\r\n                    parent.components[\"ui-yoga\"].getProperties());\r\n            }else{\r\n                parent.yoga_node.setWidth(width ? width * 100 : 'auto');\r\n                parent.yoga_node.setHeight(height ? height * 100 : 'auto');\r\n                parent.yoga_node.setJustifyContent(Yoga.JUSTIFY_FLEX_START);\r\n                parent.yoga_node.setFlexDirection(Yoga.FLEX_DIRECTION_ROW);\r\n                parent.yoga_node.setAlignContent(Yoga.ALIGN_AUTO);\r\n                parent.yoga_node.setFlexWrap(Yoga.WRAP_WRAP);\r\n            }\r\n            // Add the yoga node to the Yoga tree.\r\n            if(parent.parentElement&&parent.parentElement.yoga_node){\r\n                // Default margin if none set;\r\n                if(!parent.components[\"ui-yoga\"]){\r\n                    parent.yoga_node.setMargin(Yoga.EDGE_RIGHT, 5);\r\n                    parent.yoga_node.setMargin(Yoga.EDGE_BOTTOM, 5);\r\n                }\r\n                parent.parentElement.yoga_node.insertChild(parent.yoga_node,parent.parentElement.yoga_node.getChildCount());\r\n            }else{\r\n                // Default root padding if none set;\r\n                if(!parent.components[\"ui-yoga\"]){\r\n                    parent.yoga_node.setPadding(Yoga.EDGE_ALL,2);\r\n                }\r\n            }\r\n        }\r\n        [].slice.call(parent.children).forEach(child=>{\r\n            if(child.classList.contains('no-yoga-layout')){\r\n                return;\r\n            }\r\n            this.initialiseYoga(child);\r\n        });\r\n    },\r\n    updateYoga(parent){\r\n        // Update the entity positions from the Yoga layout.\r\n        [].slice.call(parent.children).forEach(child=>{\r\n            if(child.classList.contains('no-yoga-layout')){\r\n                return;\r\n            }\r\n            let position;\r\n            if(child.tagName===\"A-ENTITY\"){\r\n                position = {\r\n                    x:(child.yoga_node.getComputedLeft()/100),\r\n                    y:(child.yoga_node.getComputedTop()/100),\r\n                };\r\n            }else{\r\n                position = {\r\n                    x:(child.yoga_node.getComputedLeft()/100)+(child.yoga_node.getComputedWidth()/200),\r\n                    y:(child.yoga_node.getComputedTop()/100)+(child.yoga_node.getComputedHeight()/200),\r\n                };\r\n            }\r\n            let highest = (child.yoga_node.getComputedTop()/100)+(child.yoga_node.getComputedHeight()/100);\r\n            if(highest>this.content_height){\r\n                this.content_height = highest;\r\n            }\r\n            child.setAttribute('position',position.x+' '+(-position.y)+' '+child.getAttribute('position').z);\r\n            this.updateYoga(child);\r\n        });\r\n    },\r\n    setChildClips(parent){\r\n        // Traverse the entity tree inside the content container and add content clips to each material found.\r\n        parent = parent||this.container;\r\n        [].slice.call(parent.children).forEach(child=>{\r\n            child._content_clips = this.content_clips;\r\n            let traverse = ()=>{\r\n                child.object3D.traverse(object=>{\r\n                    if(object.material){\r\n                        // Add shader chunks to be able to clip shader materials - needed for <a-text> entities.\r\n                        if(object.material.isRawShaderMaterial){\r\n                            object.material.onBeforeCompile = function ( shader ) {\r\n                                let vertexParts = shader.vertexShader.split('\\n');\r\n                                let vertexMainIndex = vertexParts.indexOf('void main(void) {');\r\n                                vertexParts.splice(vertexMainIndex,0,'#include <clipping_planes_pars_vertex>');\r\n                                vertexParts.splice(vertexMainIndex+2,0,'#include <begin_vertex>');\r\n                                vertexParts.splice(vertexParts.length-2,0,'#include <project_vertex>');\r\n                                vertexParts.splice(vertexParts.length-2,0,'#include <clipping_planes_vertex>');\r\n                                shader.vertexShader = vertexParts.join('\\n');\r\n                                let fragmentParts = shader.fragmentShader.split('\\n');\r\n                                let fragmentMainIndex = fragmentParts.indexOf('void main() {');\r\n                                fragmentParts.splice(fragmentMainIndex,0,'#include <clipping_planes_pars_fragment>');\r\n                                fragmentParts.splice(fragmentMainIndex+2,0,'#include <clipping_planes_fragment>');\r\n                                shader.fragmentShader = fragmentParts.join('\\n');\r\n                            };\r\n                            object.material.clipping = true;\r\n                        }\r\n                        // Set the content clipping planes.\r\n                        object.material.clippingPlanes = this.content_clips;\r\n                        object.material.clipShadows = true;\r\n                        object.material.needsUpdate = true;\r\n                    }\r\n                });\r\n            };\r\n            if(child.components.text){\r\n                // Wait for the font to load first.\r\n                child.addEventListener('textfontset',()=>{\r\n                    clearTimeout(this.fontRenderTimeout);\r\n                    this.fontRenderTimeout = setTimeout(()=>UI.utils.stoppedChanging(this.currentUuid),500);\r\n                    traverse();\r\n                })\r\n            }else{\r\n                traverse();\r\n            }\r\n            // Recurse.\r\n            this.setChildClips(child);\r\n        })\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A component shim the mouse move event for the AFRAME cursor raycaster.\r\n * @namespace aframe-material-collection\r\n * @component ui-mouse-shim\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-mouse-shim', {\r\n    schema:{\r\n        fps:{type:'number',default:45}\r\n    },\r\n    init(){\r\n        if (!this.el.components.raycaster) {\r\n            throw 'ui-mouse-move component needs the raycaster component to be added.'\r\n        }\r\n        // Add support for mouse wheel\r\n        this.el.sceneEl.renderer.domElement.addEventListener( 'wheel', this.onMouseWheel.bind(this), false);\r\n    },\r\n    onMouseWheel(e){\r\n        this.emitMouseEvent('ui-mousewheel',e);\r\n    },\r\n    tick() {\r\n        if(new Date().getTime()-this.lastMouseMoveTime<(1000/this.data.fps))return;\r\n        this.emitMouseEvent('ui-mousemove');\r\n        this.lastMouseMoveTime = new Date().getTime();\r\n    },\r\n    emitMouseEvent(eventType,event){\r\n        // Get current intersections from raycaster component.\r\n        this.el.components.raycaster.intersections.forEach(intersection=>{\r\n            if(intersection.object.el){\r\n                // Emit custom mouse move event ont he intersected element.\r\n                intersection.object.el.emit(eventType,{cursorEl:this.el,intersection:intersection,evt:event})\r\n            }\r\n        });\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * Checkbox A simple component to listen for two click events in quick succession.\r\n * @namespace aframe-material-collection\r\n * @component ui-double-click\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-double-click', {\r\n    schema:{\r\n        timeout:{type:'int',default:200}\r\n    },\r\n    init() {\r\n        let last_click = 0;\r\n        // Add click event for listening for two clicks within the specified timespan.\r\n        this.el.addEventListener('mousedown',e=>{\r\n            let now = new Date().getTime();\r\n            if(now-last_click<this.data.timeout){\r\n                this.el.emit('dblclick',e);\r\n                // Reset last click\r\n                last_click = 0;\r\n                e.preventDefault();\r\n            }\r\n            last_click = now;\r\n        });\r\n    }\r\n});","/* global AFRAME,TWEEN */\r\n/**\r\n * Checkbox Component for aframe-material-collection. Includes animation and disabled state.\r\n * @namespace aframe-material-collection\r\n * @component ui-checkbox\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-checkbox', {\r\n    schema: {\r\n        value: {type:'boolean',default: false},\r\n        selectedColor: {default: '#009688'},\r\n        unselectedColor: {default: '#7f7f7f'},\r\n        disabledColor: {default: '#afafaf'},\r\n        indeterminate: {type:'boolean',default: false},\r\n        disabled:{type:'boolean',default: false},\r\n        intersectableClass: {default: 'intersectable'}\r\n    },\r\n    init() {\r\n        this.width = 0.15;\r\n        this.height = 0.15;\r\n        this.container = document.createElement('a-entity');\r\n        this.container.setAttribute('class','no-yoga-layout');\r\n        this.el.appendChild(this.container);\r\n        this.setupLines();\r\n        // Add backing element to make the whole object clickable.\r\n        let backing = document.createElement('a-plane');\r\n        backing.setAttribute('width',0.105);\r\n        backing.setAttribute('height',0.105);\r\n        backing.setAttribute('position','0 0 -0.002');\r\n        backing.setAttribute('shader','flat');\r\n        backing.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        backing.setAttribute('opacity',0.0001);\r\n        backing.setAttribute('transparent',true);\r\n        this.el.appendChild(backing);\r\n        this.clickHandler = ()=>{\r\n            this.data.value = !this.data.value;\r\n            this.click();\r\n        };\r\n        // Setup initial state\r\n        this.setSelected();\r\n        this.setDisabled();\r\n        this.setTransform(1);\r\n    },\r\n    updateSchema(){\r\n        if(this.data){\r\n            this.setDisabled();\r\n            if(this.data.disabled){\r\n                if(this.data.value){\r\n                    this.data.value=false;\r\n                    this.data.indeterminate=false;\r\n                    this.click();\r\n                }\r\n            }else{\r\n                this.click();\r\n            }\r\n        }\r\n    },\r\n    setTransform(x){\r\n        // Adjust position and rotation based on the interpolated value x between 0 and 1.\r\n        // Used to offset the checkbox when in a checked state\r\n        if(this.data.value){\r\n            this.container.setAttribute('rotation',{x:0,y:0,z:-45*x});\r\n            this.container.setAttribute('position',{x:-0.025*x,y:0.05*x,z:0});\r\n        }else{\r\n            this.container.setAttribute('rotation',{x:0,y:0,z:-45+(45*x)});\r\n            this.container.setAttribute('position',{x:0.025-(0.025*x),y:0.05-(0.05*x),z:0});\r\n        }\r\n    },\r\n    click(){\r\n        // Reset indeterminate state on click\r\n        this.data.indeterminate = false;\r\n        // Hide / Show left and top lines for checked state, or right line aswell for intermediate state.\r\n        this.setSelected();\r\n        // run animation\r\n        this.animateSelected()\r\n    },\r\n    animateSelected(){\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        new TWEEN.Tween({x:0})\r\n            .to({ x: 1}, 200)\r\n            .onUpdate(function(){\r\n                _this.setTransform(this.x);\r\n            })\r\n            .onComplete(function(){\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.el.object3D.uuid);\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    },\r\n    setSelected(){\r\n        // Hide / Show lines that make up checkbox based on the current state.\r\n        if(this.data.value){\r\n            this.topLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.leftLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.bottomLine.setAttribute('scale','1 1 1');\r\n            this.rightLine.setAttribute('scale','1 1 1');\r\n            this.bottomLine.setAttribute('position','0.025 -0.05 0');\r\n            this.rightLine.setAttribute('position','0.05 0 0');\r\n            this.bottomLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('height',0.05);\r\n            this.bottomLine.setAttribute('color',this.data.selectedColor);\r\n            this.rightLine.setAttribute('color',this.data.selectedColor);\r\n        }else if(this.data.indeterminate){\r\n            this.topLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.leftLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.bottomLine.setAttribute('scale','1 1 1');\r\n            this.rightLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.bottomLine.setAttribute('position','0 0 0');\r\n            this.bottomLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('height',0.1);\r\n            this.bottomLine.setAttribute('color',this.data.unselectedColor);\r\n            this.rightLine.setAttribute('color',this.data.unselectedColor);\r\n        }else{\r\n            this.topLine.setAttribute('scale','1 1 1');\r\n            this.leftLine.setAttribute('scale','1 1 1');\r\n            this.bottomLine.setAttribute('scale','1 1 1');\r\n            this.rightLine.setAttribute('scale','1 1 1');\r\n            this.bottomLine.setAttribute('height',0.1);\r\n            this.leftLine.setAttribute('position','-0.05 0 0');\r\n            this.rightLine.setAttribute('position','0.05 0 0');\r\n            this.topLine.setAttribute('position','0 0.05 0');\r\n            this.bottomLine.setAttribute('position','0 -0.05 0');\r\n            this.topLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('color',this.data.unselectedColor);\r\n            this.rightLine.setAttribute('color',this.data.unselectedColor);\r\n        }\r\n    },\r\n    setupLines(){\r\n        // Add four lines to make a square wireframe\r\n        this.leftLine = this.line(true);\r\n        this.rightLine = this.line(true);\r\n        this.topLine = this.line(true);\r\n        this.bottomLine = this.line(true);\r\n        this.container.appendChild(this.topLine);\r\n        this.container.appendChild(this.leftLine);\r\n        this.container.appendChild(this.bottomLine);\r\n        this.container.appendChild(this.rightLine);\r\n    },\r\n    setDisabled(){\r\n        // Check and set the disabled state of the checkbox - add / remove click handler.\r\n        if(this.data.disabled){\r\n            this.el.removeEventListener('mousedown',this.clickHandler);\r\n            this.topLine.setAttribute('color',this.data.disabledColor);\r\n            this.leftLine.setAttribute('color',this.data.disabledColor);\r\n            this.rightLine.setAttribute('color',this.data.disabledColor);\r\n            this.bottomLine.setAttribute('color',this.data.disabledColor);\r\n        }else{\r\n            this.el.addEventListener('mousedown',this.clickHandler);\r\n            this.topLine.setAttribute('color',this.data.unselectedColor);\r\n            this.leftLine.setAttribute('color',this.data.unselectedColor);\r\n            this.rightLine.setAttribute('color',this.data.value?this.data.selectedColor:this.data.unselectedColor);\r\n            this.bottomLine.setAttribute('color',this.data.value?this.data.selectedColor:this.data.unselectedColor);\r\n        }\r\n    },\r\n    line(is_vertical){\r\n        // Create horizontal/vertical line.\r\n        let line = document.createElement('a-plane');\r\n        line.setAttribute('width',is_vertical?0.01:0.105);\r\n        line.setAttribute('height',is_vertical?0.105:0.01);\r\n        line.setAttribute('class','no-yoga-layout');\r\n        line.setAttribute('shader','flat');\r\n        return line;\r\n    }\r\n});","/* global AFRAME,TWEEN */\r\n/**\r\n * Radio Component for aframe-material-collection. Resets other radio buttons siblings and includes a disabled state.\r\n * @namespace aframe-material-collection\r\n * @component ui-radio\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-radio', {\r\n    schema: {\r\n        value: {default: ''},\r\n        selected:{type: 'boolean', default: false},\r\n        selectedColor: {default: '#009688'},\r\n        selectedRadius: {type:'number',default: 0.045},\r\n        unselectedColor: {default: '#5f5f5f'},\r\n        disabledColor: {default: '#afafaf'},\r\n        disabled: {type: 'boolean', default: false},\r\n        intersectableClass: {default: 'intersectable'},\r\n    },\r\n    init() {\r\n        this.width = this.data.size||0.15;\r\n        this.height = this.data.size||0.15;\r\n        // Create center circle for checked state.\r\n        this.filled_circle = document.createElement('a-circle');\r\n        this.filled_circle.setAttribute('radius',this.data.selectedRadius);\r\n        this.filled_circle.setAttribute('scale','0 0 0');\r\n        this.filled_circle.setAttribute('color',this.data.disabled?this.data.disabledColor:this.data.selectedColor);\r\n        this.filled_circle.setAttribute('shader','flat');\r\n        this.filled_circle.setAttribute('class','no-yoga-layout');\r\n        this.filled_circle.setAttribute('segments',6);\r\n        this.el.components.material.material.color = new THREE.Color(this.data.disabled?this.data.disabledColor:this.data.unselectedColor);\r\n        this.el.appendChild(this.filled_circle);\r\n        // Create backing for getting click events.\r\n        let backing = document.createElement('a-circle');\r\n        backing.setAttribute('radius',this.data.selectedRadius);\r\n        backing.setAttribute('position','0 0 -0.002');\r\n        backing.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        backing.setAttribute('shader','flat');\r\n        backing.setAttribute('segments',6);\r\n        backing.setAttribute('opacity',0.0001);\r\n        backing.setAttribute('transparent',true);\r\n        this.el.appendChild(backing);\r\n        // Set this if it is checked.\r\n        if(this.data.selected){\r\n            this.click();\r\n        }\r\n        // TODO: need to add play/pause methods for registering/unregistering events.\r\n        if(!this.data.disabled){\r\n            this.el.addEventListener('mousedown',e=>this.click(e));\r\n        }\r\n    },\r\n    deselect(){\r\n        // Deselect this radio with a scale animation on the circle.\r\n        this.el.setAttribute('selected',false);\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.filled_circle.object3D.uuid);\r\n        new TWEEN.Tween({x:1})\r\n            .to({ x: 0.000001}, 200)\r\n            .onUpdate(function(){\r\n                _this.filled_circle.object3D.scale.set(this.x,this.x,this.x);\r\n            })\r\n            .onComplete(()=>{\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.filled_circle.object3D.uuid);\r\n                this.isRippling = false;\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    },\r\n    click(){\r\n        // Get all other radio siblings and reset their state if they are selected.\r\n        [].slice.call(this.el.parentNode.querySelectorAll('a-ring,a-ui-radio')).filter(el=>el!==this.el).forEach(ring=>{\r\n            if(ring.components['ui-radio']&&ring.getAttribute('selected')===\"true\"){\r\n                ring.components['ui-radio'].deselect();\r\n            }\r\n        });\r\n        // Emit the current selected value\r\n        this.el.emit('ui-radio-changed',this.data.value);\r\n        // Set this radio's selected state.\r\n        this.el.setAttribute('selected',true);\r\n        // Throttle animations.\r\n        if(this.isSelecting)return;\r\n        this.isSelecting = true;\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.filled_circle.object3D.uuid);\r\n        new TWEEN.Tween({x:0.000001})\r\n            .to({ x: 1}, 250)\r\n            .onUpdate(function(){\r\n                _this.filled_circle.object3D.scale.set(this.x,this.x,this.x);\r\n            })\r\n            .onComplete(()=>{\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(this.filled_circle.object3D.uuid);\r\n                this.isSelecting = false;\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * Rounded borders Component for aframe-material-collection. Expects an a-plane entity.\r\n * @namespace aframe-material-collection\r\n * @component ui-border\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-border', {\r\n    schema: {\r\n        borderRadius: {type: 'number', default: 0.01},\r\n        curveSegments:{type: 'int', default: 5},\r\n        borderWidth:{type: 'number', default: 0.008},\r\n        color:{default:\"#5f5f5f\"},\r\n        numberOfPoints:{type:'int',default:180}\r\n    },\r\n    init() {\r\n        let mesh = this.el.getObject3D('mesh');\r\n        let roundedRectShape = new THREE.Shape();\r\n        this.roundedRect(roundedRectShape,\r\n            mesh.geometry.metadata.parameters.width,\r\n            mesh.geometry.metadata.parameters.height,\r\n            this.data.borderRadius);\r\n        this.roundedRect(roundedRectShape,\r\n            mesh.geometry.metadata.parameters.width-this.data.borderWidth*2,\r\n            mesh.geometry.metadata.parameters.height-this.data.borderWidth*2,\r\n            this.data.borderRadius,true);\r\n\r\n        this.el.setObject3D('mesh',new THREE.Mesh( new THREE.ShapeGeometry(roundedRectShape,this.data.curveSegments), new THREE.MeshBasicMaterial( { color: this.data.color } ) ));\r\n    \r\n    },\r\n    roundedRect( ctx, width, height, radius, isHole) {\r\n        let x = -width/2, y = -height/2;\r\n        // Draw the Rounded rectangle shape centered in the object - from three.js shapes example.\r\n        let shapeCtx;\r\n        if(isHole){\r\n            shapeCtx = ctx;\r\n            ctx = new THREE.Path()\r\n        }\r\n        ctx.moveTo( x, y + radius );\r\n        ctx.lineTo( x, y + height - radius );\r\n        ctx.quadraticCurveTo( x, y + height, x + radius, y + height );\r\n        ctx.lineTo( x + width - radius, y + height );\r\n        ctx.quadraticCurveTo( x + width, y + height, x + width, y + height - radius );\r\n        ctx.lineTo( x + width, y + radius );\r\n        ctx.quadraticCurveTo( x + width, y, x + width - radius, y );\r\n        ctx.lineTo( x + radius, y );\r\n        ctx.quadraticCurveTo( x, y, x, y + radius );\r\n        if(isHole){\r\n            shapeCtx.holes.push(ctx);\r\n        }\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A curved-plane component to curve a plane primitive.\r\n * @namespace aframe-material-collection\r\n * @component ui-curved-plane\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-curved-plane', {\r\n    schema: {\r\n        depth:{type:'number',default:0.03}\r\n    },\r\n    init(){\r\n        let mesh = this.el.getObject3D('mesh');\r\n        let width = this.el.getAttribute('width');\r\n        let height = this.el.getAttribute('height');\r\n        let browser_pane = new THREE.PlaneGeometry(width, height, 5, 1);\r\n        let curve = new THREE.CubicBezierCurve3(\r\n            browser_pane.vertices[0],\r\n            new THREE.Vector3(0.375*width, 0, -this.data.depth*width ),\r\n            new THREE.Vector3(0.625*width, 0, -this.data.depth*width ),\r\n            browser_pane.vertices[(browser_pane.vertices.length/2) - 1]\r\n        );\r\n        let planePoints = curve.getPoints(Math.abs(browser_pane.vertices.length/2)-1);\r\n        for (let edgeI = 1; edgeI < 3; edgeI++) {\r\n            for (let pointI = 0; pointI < planePoints.length; pointI++) {\r\n                browser_pane.vertices[(edgeI === 2 ? planePoints.length + pointI : pointI)].z = planePoints[pointI].z;\r\n            }\r\n        }\r\n        mesh.geometry = browser_pane;\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A component to pick a color - based on https://github.com/mokargas/aframe-colorwheel-component\r\n * @namespace aframe-material-collection\r\n * @component ui-renderer\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-color-picker', {\r\n    schema: {\r\n        backingColor:{default:\"#dfdfdf\"},\r\n        backingColorBottom:{default:\"#4db6ac\"},\r\n        targetEl:{type:'selector'}\r\n    },\r\n    init() {\r\n        this.setupColorWheel();\r\n        this.setupBrightnessSlider();\r\n        this.setupColorPreview();\r\n        this.setupBacking();\r\n        this.setupEvents();\r\n        this.el.setAttribute('visible',false);\r\n        this.el.setAttribute('scale','0.00001 0.00001 0.00001');\r\n        // Expose methods to open/close the color picker.\r\n        this.el.open = this.open.bind(this);\r\n        this.el.close = this.close.bind(this);\r\n    },\r\n    open(){\r\n        return new Promise(resolve=>{\r\n            this.selectCallback = resolve;\r\n            this.el.setAttribute('visible',true);\r\n            this.tweenPickerScale(0.00001,0.5);\r\n        });\r\n    },\r\n    close(){\r\n        this.tweenPickerScale(0.5,0.00001)\r\n            .then(()=>this.el.setAttribute('visible',false));\r\n    },\r\n    tweenPickerScale(from,to){\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        return new Promise(r=>{\r\n            let _this = this;\r\n            new TWEEN.Tween({x:from})\r\n                .to({x:to}, 250)\r\n                .onUpdate(function(){\r\n                    _this.el.setAttribute('scale',this.x+' '+this.x+' '+this.x);\r\n                })\r\n                .onComplete(()=>{\r\n                    UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n                    r();\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        });\r\n    },\r\n    setupBacking(){\r\n        let circleBacking = document.createElement('a-circle');\r\n        circleBacking.className = 'no-yoga-layout';\r\n        circleBacking.setAttribute('position','0 0 -0.001');\r\n        circleBacking.setAttribute('material',{\r\n            color: this.data.backingColor,\r\n            flatShading: true,\r\n            shader: 'flat',\r\n            fog: false,\r\n            side: 'double'\r\n        });\r\n        circleBacking.setAttribute('radius',0.65);\r\n        circleBacking.setAttribute('theta-length',180);\r\n\r\n        this.el.appendChild(circleBacking);\r\n\r\n        let planeBacking = document.createElement('a-plane');\r\n        planeBacking.setAttribute('position','0 -0.375 -0.001');\r\n        planeBacking.className = 'no-yoga-layout';\r\n        planeBacking.setAttribute('material',{\r\n            color: this.data.backingColor,\r\n            flatShading: true,\r\n            shader: 'flat',\r\n            fog: false,\r\n            side: 'double'\r\n        });\r\n        planeBacking.setAttribute('width',1.3);\r\n        planeBacking.setAttribute('height',0.75);\r\n\r\n        this.el.appendChild(planeBacking);\r\n\r\n\r\n        let planeBackingBottom = document.createElement('a-plane');\r\n        planeBackingBottom.setAttribute('position','0 -1.05 -0.001');\r\n        planeBackingBottom.className = 'no-yoga-layout';\r\n        planeBackingBottom.setAttribute('material',{\r\n            color: this.data.backingColorBottom,\r\n            flatShading: true,\r\n            shader: 'flat',\r\n            fog: false,\r\n            side: 'double'\r\n        });\r\n        planeBackingBottom.setAttribute('width',1.3);\r\n        planeBackingBottom.setAttribute('height',0.6);\r\n        this.el.appendChild(planeBackingBottom);\r\n\r\n        let buttonConfirm = document.createElement('a-ui-button');\r\n        buttonConfirm.setAttribute('position','0.315 -1.17 0.001');\r\n        buttonConfirm.className = 'intersectable no-yoga-layout';\r\n        buttonConfirm.setAttribute('text-value','SAVE');\r\n        buttonConfirm.setAttribute('color','#ffffff');\r\n        buttonConfirm.setAttribute('wrap-count','9');\r\n        buttonConfirm.setAttribute('ripple-color','#009688');\r\n        buttonConfirm.setAttribute('font-color','#009688');\r\n        buttonConfirm.setAttribute('ripple-size','0.5 0.18');\r\n        buttonConfirm.setAttribute('width',0.5);\r\n        buttonConfirm.setAttribute('height',0.18);\r\n        if(this.data.targetEl)\r\n            this.data.targetEl.addEventListener('mousedown',()=> {\r\n                this.el.open();\r\n            });\r\n        this.el.appendChild(buttonConfirm);\r\n        buttonConfirm.addEventListener('mousedown',e=> {\r\n            let hex = this.getHex();\r\n            this.el.emit('color-selected',hex);\r\n            this.el.close();\r\n            UI.utils.preventDefault(e);\r\n            if(this.data.targetEl){\r\n                this.data.targetEl.setAttribute('color',hex);\r\n            }\r\n            if(this.selectCallback&& typeof this.selectCallback === \"function\"){\r\n                this.selectCallback(hex);\r\n            }\r\n        });\r\n\r\n        let buttonCancel = document.createElement('a-ui-button');\r\n        buttonCancel.setAttribute('position','-0.315 -1.17 0.001');\r\n        buttonCancel.className = 'intersectable no-yoga-layout';\r\n        buttonCancel.setAttribute('text-value','CANCEL');\r\n        buttonCancel.setAttribute('color','#ffffff');\r\n        buttonCancel.setAttribute('wrap-count','9');\r\n        buttonCancel.setAttribute('ripple-color','#ff9800');\r\n        buttonCancel.setAttribute('font-color','#ff9800');\r\n        buttonCancel.setAttribute('ripple-size','0.5 0.18');\r\n        buttonCancel.setAttribute('width',0.5);\r\n        buttonCancel.setAttribute('height',0.18);\r\n\r\n        this.el.appendChild(buttonCancel);\r\n        buttonCancel.addEventListener('mousedown',e=> {\r\n            this.el.emit('color-cancelled');\r\n            this.el.close();\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        this.hexValue = document.createElement('a-text');\r\n        this.hexValue.setAttribute('value','#ffffff');\r\n        this.hexValue.setAttribute('align','center');\r\n        this.hexValue.setAttribute('position','0 -0.9 0.001');\r\n        this.hexValue.setAttribute('wrap-count',15);\r\n        this.hexValue.setAttribute('width',1.3);\r\n\r\n        this.el.appendChild(this.hexValue);\r\n    },\r\n    setupColorPreview(){\r\n        this.colorPreview = document.createElement('a-circle');\r\n        this.colorPreview.setAttribute('position','-0.45 -0.9 0');\r\n        this.colorPreview.setAttribute('material',{\r\n            color: '#ffffff',\r\n            flatShading: true,\r\n            transparent: true,\r\n            shader: 'flat',\r\n            fog: false,\r\n            side: 'double'\r\n        });\r\n        this.colorPreview.setAttribute('radius',0.05);\r\n        this.el.appendChild(this.colorPreview);\r\n    },\r\n    setupColorWheel(){\r\n        this.hsv = {\r\n            h: 0.0,\r\n            s: 0.0,\r\n            v: 1.0\r\n        };\r\n        this.colorWheel = document.createElement('a-circle');\r\n        this.colorWheel.setAttribute('material',{\r\n            color: '#ffffff',\r\n            flatShading: true,\r\n            transparent: true,\r\n            shader: 'flat',\r\n            fog: false,\r\n            side: 'double'\r\n        });\r\n        this.colorWheel.setAttribute('radius',0.5);\r\n        this.el.appendChild(this.colorWheel);\r\n        this.colorWheel.className = 'intersectable no-yoga-layout';\r\n        this.colorWheel.addEventListener('loaded',()=>{\r\n            let colorWheel = this.colorWheel.getObject3D('mesh');\r\n            let vertexShader = '\\n\\n      varying vec2 vUv;\\n      void main() {\\n        vUv = uv;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    ';\r\n\r\n            let fragmentShader = '\\n      #define M_PI2 6.28318530718\\n      uniform float brightness;\\n      varying vec2 vUv;\\n      vec3 hsb2rgb(in vec3 c){\\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\\n          return c.z * mix( vec3(1.0), rgb, c.y);\\n      }\\n\\n      void main() {\\n        vec2 toCenter = vec2(0.5) - vUv;\\n        float angle = atan(toCenter.y, toCenter.x);\\n        float radius = length(toCenter) * 2.0;\\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\\n        gl_FragColor = vec4(color, 1.0);\\n      }\\n      ';\r\n\r\n            colorWheel.material = new THREE.ShaderMaterial({\r\n                uniforms: {\r\n                    brightness: {\r\n                        type: 'f',\r\n                        value: this.hsv.v\r\n                    }\r\n                },\r\n                vertexShader: vertexShader,\r\n                fragmentShader: fragmentShader\r\n            });\r\n            colorWheel.material.needsUpdate = true;\r\n        })\r\n    },\r\n    setupBrightnessSlider(){\r\n        this.brightnessSlider = document.createElement('a-plane');\r\n        this.brightnessSlider.setAttribute('height',0.1);\r\n        this.brightnessSlider.setAttribute('width',0.8);\r\n        this.brightnessSlider.setAttribute('position','0 -0.6 0');\r\n        this.brightnessSlider.className = 'intersectable no-yoga-layout';\r\n        this.el.appendChild(this.brightnessSlider);\r\n        this.brightnessSlider.addEventListener('loaded',()=>{\r\n\r\n            let vertexShader = '\\n      varying vec2 vUv;\\n      void main(){\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\\n      }\\n    ';\r\n\r\n            let fragmentShader = '\\n      uniform vec3 color1;\\n      uniform vec3 color2;\\n      varying vec2 vUv;\\n\\n      void main(){\\n        vec4 c1 = vec4(color1, 1.0);\\n  \\t    vec4 c2 = vec4(color2, 1.0);\\n\\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.x));\\n        gl_FragColor = color;\\n      }\\n    ';\r\n\r\n\r\n            this.brightnessSlider.getObject3D('mesh').material = new THREE.ShaderMaterial({\r\n                uniforms: {\r\n                    color1: {\r\n                        type: 'c',\r\n                        value: new THREE.Color(0xFFFFFF)\r\n                    },\r\n                    color2: {\r\n                        type: 'c',\r\n                        value: new THREE.Color(0x000000)\r\n                    }\r\n                },\r\n                vertexShader: vertexShader,\r\n                fragmentShader: fragmentShader\r\n            });\r\n            this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\r\n        });\r\n        let brightnessResetLeft = document.createElement('a-triangle');\r\n        brightnessResetLeft.setAttribute('vertex-a','0 0.05 0');\r\n        brightnessResetLeft.setAttribute('vertex-b','-0.05 -0.05 0');\r\n        brightnessResetLeft.setAttribute('vertex-c','0.05 -0.05 0');\r\n        brightnessResetLeft.setAttribute('position','-0.475 -0.6 0');\r\n        brightnessResetLeft.setAttribute('rotation','0 0 90');\r\n        brightnessResetLeft.setAttribute('shader','flat');\r\n        brightnessResetLeft.setAttribute('color','#009688');\r\n        brightnessResetLeft.setAttribute('ui-btn','');\r\n        brightnessResetLeft.className = 'intersectable';\r\n        this.el.appendChild(brightnessResetLeft);\r\n\r\n\r\n        let brightnessResetRight = document.createElement('a-triangle');\r\n        brightnessResetRight.setAttribute('vertex-a','0 0.05 0');\r\n        brightnessResetRight.setAttribute('vertex-b','-0.05 -0.05 0');\r\n        brightnessResetRight.setAttribute('vertex-c','0.05 -0.05 0');\r\n        brightnessResetRight.setAttribute('position','0.475 -0.6 0');\r\n        brightnessResetRight.setAttribute('rotation','0 0 -90');\r\n        brightnessResetRight.setAttribute('color','#009688');\r\n        brightnessResetRight.setAttribute('shader','flat');\r\n        brightnessResetRight.setAttribute('ui-btn','');\r\n        brightnessResetRight.className = 'intersectable';\r\n        this.el.appendChild(brightnessResetRight);\r\n\r\n        brightnessResetLeft.addEventListener('mousedown',()=>{\r\n\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            this.colorWheel.getObject3D('mesh').material.uniforms['brightness'].value = 0;\r\n            this.hsv.v = 0;\r\n            this.hsv.h = 0;\r\n            this.hsv.s = 0;\r\n            this.updateColor();\r\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n        });\r\n        brightnessResetRight.addEventListener('mousedown',()=>{\r\n\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            this.colorWheel.getObject3D('mesh').material.uniforms['brightness'].value = 1;\r\n            this.hsv.v = 1;\r\n            this.hsv.h = 0;\r\n            this.hsv.s = 0;\r\n            this.updateColor();\r\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n        });\r\n    },\r\n    getHex(){\r\n        let rgb = this.hsvToRgb(this.hsv),\r\n            color = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\r\n        return '#' + new THREE.Color(color).getHexString()\r\n    },\r\n    updateColor(){\r\n        let hex = this.getHex();\r\n        this.colorPreview.setAttribute('color',hex);\r\n        this.hexValue.setAttribute('value',hex);\r\n    },\r\n    setupEvents(){\r\n        this.colorWheel.addEventListener('mousedown',e=>{\r\n            this.isMouseDown = true;\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        this.colorWheel.addEventListener('mouseup',e=>{\r\n            this.isMouseDown = false;\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        this.colorWheel.addEventListener('ui-mousemove',e=>{\r\n            if(!this.isMouseDown)return;\r\n            UI.utils.preventDefault(e);\r\n\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            let colorWheel = this.colorWheel.getObject3D('mesh'),\r\n                radius = 0.5,\r\n                position = e.detail.intersection.point;\r\n\r\n            colorWheel.updateMatrixWorld();\r\n            colorWheel.worldToLocal(position);\r\n\r\n            //Determine Hue and Saturation value from polar co-ordinates\r\n            let polarPosition = {\r\n                r: Math.sqrt(position.x * position.x + position.y * position.y),\r\n                theta: Math.PI + Math.atan2(position.y, position.x)\r\n            };\r\n\r\n            let angle = (polarPosition.theta * (180 / Math.PI) + 180) % 360;\r\n            this.hsv.h = angle / 360;\r\n            this.hsv.s = polarPosition.r / radius;\r\n            this.updateColor();\r\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n        });\r\n        this.brightnessSlider.addEventListener('mousedown',e=>{\r\n            this.isMouseDown = true;\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        this.brightnessSlider.addEventListener('mouseup',e=>{\r\n            this.isMouseDown = false;\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        this.brightnessSlider.addEventListener('ui-mousemove',e=>{\r\n\r\n            UI.utils.preventDefault(e);\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            if(!this.isMouseDown)return;\r\n            let brightnessSlider = this.brightnessSlider.getObject3D('mesh'),\r\n                colorWheel = this.colorWheel.getObject3D('mesh'),\r\n                position = e.detail.intersection.point;\r\n\r\n            brightnessSlider.updateMatrixWorld();\r\n            brightnessSlider.worldToLocal(position);\r\n\r\n            //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\r\n            let cursorOffset = position.x + 0.4;//this.brightnessSliderHeight / 2;\r\n            let brightness = cursorOffset / 0.8;//this.brightnessSliderHeight;\r\n\r\n            //Update material brightness\r\n            colorWheel.material.uniforms['brightness'].value = brightness;\r\n            this.hsv.v = brightness;\r\n            this.updateColor();\r\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n        });\r\n    },\r\n    hsvToRgb(hsv) {\r\n        let r, g, b, i, f, p, q, t;\r\n        let h = THREE.Math.clamp(hsv.h, 0, 1);\r\n        let s = THREE.Math.clamp(hsv.s, 0, 1);\r\n        let v = hsv.v;\r\n\r\n        i = Math.floor(h * 6);\r\n        f = h * 6 - i;\r\n        p = v * (1 - s);\r\n        q = v * (1 - f * s);\r\n        t = v * (1 - (1 - f) * s);\r\n        switch (i % 6) {\r\n            case 0:\r\n                r = v;\r\n                g = t;\r\n                b = p;\r\n                break;\r\n            case 1:\r\n                r = q;\r\n                g = v;\r\n                b = p;\r\n                break;\r\n            case 2:\r\n                r = p;\r\n                g = v;\r\n                b = t;\r\n                break;\r\n            case 3:\r\n                r = p;\r\n                g = q;\r\n                b = v;\r\n                break;\r\n            case 4:\r\n                r = t;\r\n                g = p;\r\n                b = v;\r\n                break;\r\n            case 5:\r\n                r = v;\r\n                g = p;\r\n                b = q;\r\n                break;\r\n        }\r\n        return {\r\n            r: Math.round(r * 255),\r\n            g: Math.round(g * 255),\r\n            b: Math.round(b * 255)\r\n        };\r\n    }\r\n});\r\n\r\n","/* global AFRAME,THREE */\r\n/**\r\n * Modal Component for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @component ui-modal\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-modal', {\r\n    schema: {\r\n        modal:{type:'selector'},\r\n        main:{type:'selector'}\r\n    },\r\n    init(){\r\n        if(this.data.modal&&this.data.main){\r\n            // Get the modal panel to be able to animate its scale on open/close.\r\n            this.modalPanel = document.querySelector(this.data.modal.getAttribute('ui-panel'));\r\n\r\n            this.mainComponents = this.data.main.components;\r\n            this.modalComponents = this.data.modal.components;\r\n            // Pause rendering of modal until opened.\r\n            if(this.modalComponents&&this.modalComponents['ui-renderer']){\r\n                this.modalComponents['ui-renderer'].pause();\r\n            }\r\n            // Setup close listeners for anything with the class close-modal.\r\n            let close_buttons = this.data.modal.querySelectorAll('.close-modal');\r\n            for(let i = 0; i < close_buttons.length; i++ ){\r\n                let close_button = close_buttons[i];\r\n                close_button.addEventListener('mousedown',()=>{\r\n                    this.close();\r\n                });\r\n            }\r\n            // Add click handler for opening the modal, pause the main render screen and play the modal renderer\r\n            this.el.addEventListener('mousedown',()=>{\r\n                this.open();\r\n            });\r\n            this.data.main.modal = this;\r\n\r\n            // Expose methods to open/close the modal.\r\n            this.el.open = this.open.bind(this);\r\n            this.el.close = this.close.bind(this);\r\n        }\r\n    },\r\n    open(){\r\n        if(this.mainComponents&&this.mainComponents['ui-renderer']){\r\n            this.mainComponents['ui-renderer'].pauseRender();\r\n            this.tweenModalScale(0.0000001,1);\r\n            this.modalComponents['ui-renderer'].play();\r\n        }\r\n    },\r\n    close(){\r\n        // Pause the modal rendering and play the main rendering again.\r\n        this.modalComponents['ui-renderer'].pause();\r\n        this.mainComponents['ui-renderer'].play();\r\n        this.mainComponents['ui-renderer'].playRender();\r\n        this.tweenModalScale(1,0.0000001)\r\n            .then(()=>{\r\n                this.el.sceneEl.emit('modal-closed');\r\n            });\r\n    },\r\n    tweenModalScale(from,to){\r\n        return new Promise(r=>{\r\n            let _this = this;\r\n            new TWEEN.Tween({x:from})\r\n                .to({x:to}, 250)\r\n                .onUpdate(function(){\r\n                    if(_this.modalPanel)\r\n                        _this.modalPanel.setAttribute('scale',this.x+' '+this.x+' '+this.x);\r\n                })\r\n                .onComplete(r)\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        });\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A component to render the UI to a flat plane, removing the objects from the scene and rendering them separately to a\r\n * render target.\r\n * @namespace aframe-material-collection\r\n * @component ui-renderer\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-renderer', {\r\n    schema: {\r\n        uiPanel: {type: 'selector'},\r\n        lookControlsEl: {type: 'selector'},\r\n        lookControlsComponent:{default:'look-controls'},\r\n        panelPosition:{type:'vec3',default:{x:0,y:1.6,z:-1}},\r\n        panelSize:{type:'vec2',default:{x:6,y:3}},\r\n        renderResolution:{type:'vec2',default:{x:2048,y:1024}},\r\n        debugRaycaster:{type:'boolean',default: false},\r\n        fps:{type:'number',default:60},\r\n        intersectableClass:{default:'intersectable'}\r\n    },\r\n    init() {\r\n        this.setupBackDrop();\r\n        if(!this.data.uiPanel){\r\n            this.meshEl = this.setupUIPanel();\r\n        }else{\r\n            this.meshEl = this.data.uiPanel;\r\n        }\r\n        // Remove this object from the scene to be rendered separately.\r\n        this.el.object3D.parent.remove(this.el.object3D);\r\n        // Setup fixed camera nd render target.\r\n        this.camera = new THREE.PerspectiveCamera( 100, 2, 0.1, 1000 );\r\n        // Setup render target\r\n        this.renderTarget = new THREE.WebGLRenderTarget(this.data.renderResolution.x,this.data.renderResolution.y, { antialias: true } );\r\n        // Set the texture to the ui panel mesh.\r\n        this.meshEl.getObject3D('mesh').material.map = this.renderTarget.texture;\r\n        // Listen for change events to enable rendering.\r\n        this.stoppedRendering = false;\r\n        this.isRendering = true;\r\n        // Listen for change events to enable/disable rendering\r\n        this.el.sceneEl.addEventListener('ui-changing',()=>{\r\n            //console.log(JSON.stringify(new Date()),'ui-changing');\r\n            this.stoppedRendering = false;\r\n            this.isRendering = true;\r\n        });\r\n        this.el.sceneEl.addEventListener('ui-changing-stopped',()=>{\r\n            //console.log(JSON.stringify(new Date()),'ui-changing-stopped');\r\n            this.isRendering = false;\r\n        });\r\n        // Setup raycaster for relaying mouse/keyboard events\r\n        this.raycaster = new THREE.Raycaster();\r\n        this.helper = new THREE.Mesh(new THREE.SphereGeometry(0.01),new THREE.MeshBasicMaterial({color:'#ff0000'}));\r\n        // Add cursor helper to object\r\n        if(this.data.debugRaycaster)this.el.object3D.add(this.helper);\r\n        // Set last render time\r\n        this.lastRenderTime = 0;\r\n        this.isFrozen = false;\r\n\r\n        // Expose methods to the element to pause/play the renderer.\r\n        this.el.pauseRender = this.pauseRender.bind(this);\r\n        this.el.playRender = this.playRender.bind(this);\r\n    },\r\n    pauseRender(time){\r\n        return this.playRender(time,true)\r\n    },\r\n    playRender(time,isPaused){\r\n        let _this = this;\r\n        return new Promise(resolve=>{\r\n            if(_this.isFrozen===isPaused||_this.isAnimatingBackground)return resolve();\r\n            _this.isAnimatingBackground = true;\r\n            if(!_this.isFrozen)this.backdrop.setAttribute('scale','1 1 1');\r\n            let fromScale = _this.isFrozen?0.9:0.000001;\r\n            let toScale = _this.isFrozen?0.000001:0.9;\r\n            let duration = _this.isFrozen?time||350:time||500;\r\n            if(_this.isFrozen){\r\n                _this.isFrozen = isPaused;\r\n                _this.play();\r\n            }\r\n            UI.utils.isChanging(_this.el.sceneEl,_this.backdrop.uuid);\r\n            new TWEEN.Tween({x:fromScale})\r\n                .to({x:toScale}, duration)\r\n                .onUpdate(function(){\r\n                    _this.backdrop.setAttribute('opacity',this.x);\r\n                })\r\n                .onComplete(()=>{\r\n                    _this.isFrozen = isPaused;\r\n                    _this.isAnimatingBackground = false;\r\n                    if(_this.isFrozen){\r\n                        _this.pause();\r\n                    }else{\r\n                        this.backdrop.setAttribute('scale','0.000001 0.000001 0.000001');\r\n                    }\r\n                    // Stop changes\r\n                    UI.utils.stoppedChanging(this.backdrop.uuid);\r\n                    resolve();\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        });\r\n    },\r\n    setupBackDrop(){\r\n        this.backdrop = document.createElement('a-plane');\r\n        this.backdrop.setAttribute('transparent',true);\r\n        this.backdrop.setAttribute('opacity',0.000001);\r\n        this.backdrop.setAttribute('color','#000');\r\n        this.backdrop.setAttribute('shader','flat');\r\n        this.backdrop.setAttribute('position',{x:0,y:0,z:-0.2});\r\n        this.backdrop.setAttribute('width',1);\r\n        this.backdrop.setAttribute('height',1);\r\n        this.backdrop.setAttribute('scale','0.000001 0.000001 0.000001');\r\n        this.el.appendChild(this.backdrop);\r\n    },\r\n    play(){\r\n        this.lastMouseMoveTime = 0;\r\n        // Register event listeners\r\n        // Mousedown and mouseup do not have the correct intersection point. Use last mouse move event if available instead.\r\n        // TODO: raise issue with aframe / submit PR;\r\n        this.click = e=>this.mouseEvent('click',this.lastMoveEvent||e);\r\n        this.mousedown = e=>this.mouseEvent('mousedown',this.lastMoveEvent||e);\r\n        this.mouseup = e=>this.mouseEvent('mouseup',this.lastMoveEvent||e);\r\n        this.mousewheel = e=>this.mouseEvent('ui-mousewheel',e.detail.evt);\r\n        this.mousemove = e=>{\r\n            // Save mousemove event for mousedown/mouseup events.\r\n            this.lastMoveEvent = e;\r\n            this.mouseEvent('ui-mousemove',e);\r\n        };\r\n        this.meshEl.addEventListener('mousedown',this.mousedown);\r\n        this.meshEl.addEventListener('mouseup',this.mouseup);\r\n        this.meshEl.addEventListener('click',this.click);\r\n        this.meshEl.addEventListener('ui-mousemove',this.mousemove);\r\n        this.meshEl.addEventListener('ui-mousewheel',this.mousewheel);\r\n    },\r\n    pause(){\r\n        this.meshEl.removeEventListener('mousedown',this.mousedown);\r\n        this.meshEl.removeEventListener('mouseup',this.mouseup);\r\n        this.meshEl.removeEventListener('click',this.click);\r\n        this.meshEl.removeEventListener('ui-mousemove',this.mousemove);\r\n        this.meshEl.removeEventListener('ui-mousewheel',this.mousewheel);\r\n    },\r\n    setupUIPanel(){\r\n        let uiPanel = document.createElement('a-plane');\r\n        uiPanel.setAttribute('position',this.data.panelPosition);\r\n        uiPanel.setAttribute('width',this.data.panelSize.x);\r\n        uiPanel.setAttribute('height',this.data.panelSize.y);\r\n        this.el.sceneEl.appendChild(uiPanel);\r\n        return uiPanel;\r\n    },\r\n    mouseEvent(type,e){\r\n        let mouse = {x:0,y:0};\r\n        if(e.detail.intersection){\r\n            let localPoint = this.meshEl.object3D.worldToLocal(e.detail.intersection.point.clone());\r\n\r\n            mouse = {\r\n                x:localPoint.x/this.meshEl.getAttribute('width')*2,\r\n                y:localPoint.y/this.meshEl.getAttribute('height')*2\r\n            };\r\n        }\r\n        if(type==='ui-mousewheel'&&e.detail.evt){\r\n            mouse.deltaY = e.detail.deltaY;\r\n            mouse.deltaX = e.detail.deltaX;\r\n        }\r\n        if(type==='mousedown'&&this.lookControlsEl&&this.lookControlsEl.components['look-controls']){\r\n            this.lookControlsEl.components[this.data.lookControlsComponent].pause()\r\n        }\r\n        if(type==='mouseup'&&this.lookControlsEl&&this.lookControlsEl.components['look-controls']){\r\n            this.lookControlsEl.components[this.data.lookControlsComponent].play()\r\n        }\r\n        this.raycastIntersections(e,mouse,type);\r\n    },\r\n    raycastIntersections(e,mouse,type){\r\n        if(!this.camera)return;\r\n        //console.log(mouse);\r\n        this.raycaster.setFromCamera( mouse, this.camera );\r\n        // this.helper.setDirection(this.raycaster.ray.direction);\r\n        let intersections = this.raycaster.intersectObjects( this.el.object3D.children, true );\r\n        this.prevIntersectionEls = this.prevIntersectionEls||[];\r\n        let intersectionEls = [];\r\n        if(intersections.length&&this.data.debugRaycaster){\r\n            let intersectionPoint = intersections[0].point;\r\n            if(intersections[0].object===this.helper&&intersections.length>1){\r\n                intersectionPoint = intersections[1].point;\r\n            }\r\n            this.helper.position.copy(intersectionPoint);\r\n            this.helper.position.x-=0.03;\r\n        }\r\n        let defaultPrevented = false;\r\n        for(let i = 0;i < intersections.length; i++){\r\n            let intersection = intersections[i];\r\n            // Only emit events on objecst with an element attached\r\n            if(intersection.object.el&&intersection.object.el.classList.contains(this.data.intersectableClass)){\r\n                let currentEvent = {intersection:intersection,evt:e};\r\n                // If this is the first time weve seen this element then emit the mouseenter event.\r\n                if(this.prevIntersectionEls.indexOf(intersection.object.el)===-1&&!defaultPrevented){\r\n                    intersection.object.el.emit('mouseenter',currentEvent);\r\n                }\r\n                // Emit the mouse event received\r\n                if(!defaultPrevented||type==='ui-mousewheel'){\r\n                    intersection.object.el.emit(type,currentEvent);\r\n                }\r\n                // Store the intersection on the element.\r\n                intersection.object.el.intersection = intersection;\r\n                // Add the current el to the list to check against previous intersection els.\r\n                intersectionEls.push(intersection.object.el);\r\n            }\r\n        }\r\n        // Find any intersections that have disappeared to emit the mouse leave event.\r\n        for(let i = 0;i < this.prevIntersectionEls.length; i++){\r\n            let intersectionEl = this.prevIntersectionEls[i];\r\n            if(intersectionEls.indexOf(intersectionEl)===-1){\r\n                intersectionEl.emit('mouseleave',{intersection:intersectionEl.intersection});\r\n            }\r\n        }\r\n        // Store the current intersected elements for the next iteration.\r\n        this.prevIntersectionEls = intersectionEls;\r\n    },\r\n    tick(delta){\r\n        if(this.isFrozen||this.stoppedRendering)return;\r\n        if(delta-this.lastRenderTime<(1000/this.data.fps)&&this.isRendering)return;\r\n        this.el.object3D.traverse(child=>{\r\n            child.updateMatrixWorld();\r\n        });\r\n\r\n        let renderer = this.el.sceneEl.renderer;\r\n        let vrModeEnabled = renderer.vr.enabled;\r\n        renderer.vr.enabled = false;\r\n        renderer.render(this.el.object3D,this.camera,this.renderTarget);\r\n        renderer.vr.enabled = vrModeEnabled;\r\n        //console.log('render');\r\n        this.lastRenderTime = delta;\r\n        if(!this.isRendering){\r\n            this.stoppedRendering = true;\r\n        }\r\n    }\r\n});","/* global AFRAME,Yoga */\r\n/**\r\n * Yogo Layout Engine mapped to a Component for aframe-material-collection - https://yogalayout.com\r\n * @namespace aframe-material-collection\r\n * @component ui-yoga\r\n * @author Shane Harris\r\n */\r\n\r\nif (typeof Yoga === 'undefined') {\r\n    throw 'ui-yoga component requires the Yoga Layout Engine to be loaded - https://yogalayout.com';\r\n}\r\n// Map yoga enums to frendly names.\r\n// TODO: Need to expose the padding/border/margin side as seperate options to allow for combinations.\r\nmodule.exports = AFRAME.registerComponent('ui-yoga', {\r\n    schema: {\r\n        alignContent: {default: 'flex-start'},\r\n        alignItems: {default: 'auto'},\r\n        alignSelf: {default: 'auto'},\r\n        display: {default: 'default'},\r\n        flex: {type:'number',default: 1},\r\n        flexDirection: {default: 'row'},\r\n        flexWrap:{default: 'default'},\r\n        aspectRatio: {default: 'default'},\r\n        overflow:{default:'default'},\r\n        justifyContent:{default:'start'},\r\n        border: {type:'int',default: 0},\r\n        borderLeft: {type:'int',default: 0},\r\n        borderRight: {type:'int',default: 0},\r\n        borderTop: {type:'int',default: 0},\r\n        borderBottom: {type:'int',default: 0},\r\n        padding: {type:'int',default: 0},\r\n        paddingLeft: {type:'int',default: 0},\r\n        paddingRight: {type:'int',default: 0},\r\n        paddingTop: {type:'int',default: 0},\r\n        paddingBottom: {type:'int',default: 0},\r\n        margin: {type:'int',default: 0},\r\n        marginLeft: {type:'int',default: 0},\r\n        marginRight: {type:'int',default: 0},\r\n        marginTop: {type:'int',default: 0},\r\n        marginBottom: {type:'int',default: 0},\r\n        marginAuto: {type:'boolean',default: false},\r\n        marginAutoLeft: {type:'boolean',default: false},\r\n        marginAutoRight: {type:'boolean',default: false},\r\n        marginAutoTop: {type:'boolean',default: false},\r\n        marginAutoBottom: {type:'boolean',default: false},\r\n        marginPercent:{type:'number',default: 0},\r\n        marginPercentLeft: {type:'int',default: 0},\r\n        marginPercentRight: {type:'int',default: 0},\r\n        marginPercentTop: {type:'int',default: 0},\r\n        marginPercentBottom: {type:'int',default: 0},\r\n        flexBasis: {default: 'default'},\r\n        flexBasisPercent: {type:'number',default: 0},\r\n        flexGrow:{type:'number',default: 0},\r\n        flexShrink:{type:'number',default: 1},\r\n        maxHeight:{default: 'default'},\r\n        minHeight:{default: 'default'},\r\n        maxWidth:{default: 'default'},\r\n        minWidth:{default: 'default'},\r\n        maxHeightPercent:{default: 'default'},\r\n        minHeightPercent:{default: 'default'},\r\n        maxWidthPercent:{default: 'default'},\r\n        minWidthPercent:{default: 'default'},\r\n        position:{default: 'default'},\r\n        positionLeft: {type:'int',default: 0},\r\n        positionRight: {type:'int',default: 0},\r\n        positionTop: {type:'int',default: 0},\r\n        positionBottom: {type:'int',default: 0},\r\n        positionPercent:{default: 'default'},\r\n        positionPercentLeft: {type:'int',default: 0},\r\n        positionPercentRight: {type:'int',default: 0},\r\n        positionPercentTop: {type:'int',default: 0},\r\n        positionPercentBottom: {type:'int',default: 0},\r\n        width:{default: 'default'},\r\n        height:{default: 'default'},\r\n        widthAuto:{type:'boolean',default: false},\r\n        heightAuto:{type:'boolean',default: false},\r\n        widthPercent:{default: 'default'},\r\n        heightPercent:{default: 'default'},\r\n    },\r\n    init(){\r\n        this.setProperties();\r\n    },\r\n    updateSchema(){\r\n        this.setProperties();\r\n    },\r\n    setProperties(){\r\n        this.properties = this.properties||[];\r\n        this.properties.length = 0;\r\n        // Store the current valid yoga properties;\r\n        for(let name in this.data){\r\n            if(this.data.hasOwnProperty(name)&&\r\n                this.data[name]!=='default'&&this.data[name]){\r\n                let value = this.mapPropertyToEnum(name);\r\n                if(value)this.properties.push({method:'set'+name.charAt(0).toUpperCase() + name.substr(1),value:this.mapPropertyToEnum(name)});\r\n            }\r\n        }\r\n    },\r\n    getProperties(){\r\n        // Get the current yoga properties array as an object\r\n        let propertiesObj = {};\r\n        for(let i = 0;i < this.properties.length;i++){\r\n            propertiesObj[this.properties[i].method] = this.properties[i];\r\n        }\r\n        return propertiesObj;\r\n    },\r\n    mapPropertyToEnum(name){\r\n        // Get the yoga enum for the friendly name.\r\n        switch(true){\r\n            case name.indexOf('align') > -1:\r\n                return this.enums.align[this.data[name]];\r\n            case name.indexOf('Edge') > -1:\r\n                return this.enums.edge[this.data[name]];\r\n            case name === 'flexDirection':\r\n            case name === 'flexWrap':\r\n            case name === 'positionType':\r\n            case name === 'overflow':\r\n            case name === 'display':\r\n            case name === 'justifyContent':\r\n                return this.enums[name][this.data[name]];\r\n            default:\r\n                return this.data[name];\r\n        }\r\n    },\r\n    enums:{\r\n        align:{\r\n            count:Yoga.ALIGN_COUNT,\r\n            auto:Yoga.ALIGN_AUTO,\r\n            \"flex-start\":Yoga.ALIGN_FLEX_START,\r\n            center:Yoga.ALIGN_CENTER,\r\n            \"flex-end\":Yoga.ALIGN_FLEX_END,\r\n            stretch:Yoga.ALIGN_STRETCH,\r\n            baseline:Yoga.ALIGN_BASELINE,\r\n            \"space-between\":Yoga.ALIGN_SPACE_BETWEEN,\r\n            \"space-around\":Yoga.ALIGN_SPACE_AROUND,\r\n        },\r\n        dimension:{\r\n            count:Yoga.DIMENSION_COUNT,\r\n            width:Yoga.DIMENSION_WIDTH,\r\n            height:Yoga.DIMENSION_HEIGHT,\r\n        },\r\n        direction:{\r\n            count:Yoga.DIRECTION_COUNT,\r\n            inherit:Yoga.DIRECTION_INHERIT,\r\n            ltr:Yoga.DIRECTION_LTR,\r\n            rtl:Yoga.DIRECTION_RTL,\r\n        },\r\n        display:{\r\n            count:Yoga.DISPLAY_COUNT,\r\n            flex:Yoga.DISPLAY_FLEX,\r\n            none:Yoga.DISPLAY_NONE,\r\n        },\r\n        edge:{\r\n            count:Yoga.EDGE_COUNT,\r\n            left:Yoga.EDGE_LEFT,\r\n            top:Yoga.EDGE_TOP,\r\n            right:Yoga.EDGE_RIGHT,\r\n            bottom:Yoga.EDGE_BOTTOM,\r\n            start:Yoga.EDGE_START,\r\n            end:Yoga.EDGE_END,\r\n            horizontal:Yoga.EDGE_HORIZONTAL,\r\n            vertical:Yoga.EDGE_VERTICAL,\r\n            all:Yoga.EDGE_ALL,\r\n        },\r\n        experimental:{\r\n            count:Yoga.EXPERIMENTAL_FEATURE_COUNT,\r\n            \"flex-basis\":Yoga.EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS,\r\n        },\r\n        flexDirection:{\r\n            count:Yoga.FLEX_DIRECTION_COUNT,\r\n            column:Yoga.FLEX_DIRECTION_COLUMN,\r\n            \"column-reverse\":Yoga.FLEX_DIRECTION_COLUMN_REVERSE,\r\n            row:Yoga.FLEX_DIRECTION_ROW,\r\n            reverse:Yoga.FLEX_DIRECTION_ROW_REVERSE,\r\n        },\r\n        justifyContent:{\r\n            count:Yoga.JUSTIFY_COUNT,\r\n            start:Yoga.JUSTIFY_FLEX_START,\r\n            center:Yoga.JUSTIFY_CENTER,\r\n            end:Yoga.JUSTIFY_FLEX_END,\r\n            between:Yoga.JUSTIFY_SPACE_BETWEEN,\r\n            around:Yoga.JUSTIFY_SPACE_AROUND,\r\n            evenly:Yoga.JUSTIFY_SPACE_EVENLY,\r\n        },\r\n        logLevel:{\r\n            count:Yoga.LOG_LEVEL_COUNT,\r\n            error:Yoga.LOG_LEVEL_ERROR,\r\n            warn:Yoga.LOG_LEVEL_WARN,\r\n            info:Yoga.LOG_LEVEL_INFO,\r\n            debug:Yoga.LOG_LEVEL_DEBUG,\r\n            verbose:Yoga.LOG_LEVEL_VERBOSE,\r\n            fatal:Yoga.LOG_LEVEL_FATAL,\r\n        },\r\n        measureMode:{\r\n            count:Yoga.MEASURE_MODE_COUNT,\r\n            undefined:Yoga.MEASURE_MODE_UNDEFINED,\r\n            exactly:Yoga.MEASURE_MODE_EXACTLY,\r\n            \"at-most\":Yoga.MEASURE_MODE_AT_MOST,\r\n        },\r\n        nodeType:{\r\n            count:Yoga.NODE_TYPE_COUNT,\r\n            default:Yoga.NODE_TYPE_DEFAULT,\r\n            text:Yoga.NODE_TYPE_TEXT,\r\n        },\r\n        overflow:{\r\n            count:Yoga.OVERFLOW_COUNT,\r\n            visible:Yoga.OVERFLOW_VISIBLE,\r\n            hidden:Yoga.OVERFLOW_HIDDEN,\r\n            scroll:Yoga.OVERFLOW_SCROLL,\r\n        },\r\n        positionType:{\r\n            count:Yoga.POSITION_TYPE_COUNT,\r\n            relative:Yoga.POSITION_TYPE_RELATIVE,\r\n            absolute:Yoga.POSITION_TYPE_ABSOLUTE,\r\n        },\r\n        printOptions:{\r\n            count:Yoga.PRINT_OPTIONS_COUNT,\r\n            layout:Yoga.PRINT_OPTIONS_LAYOUT,\r\n            style:Yoga.PRINT_OPTIONS_STYLE,\r\n            children:Yoga.PRINT_OPTIONS_CHILDREN,\r\n        },\r\n        unit:{\r\n            count:Yoga.UNIT_COUNT,\r\n            undefined:Yoga.UNIT_UNDEFINED,\r\n            point:Yoga.UNIT_POINT,\r\n            percent:Yoga.UNIT_PERCENT,\r\n            auto:Yoga.UNIT_AUTO,\r\n        },\r\n        flexWrap:{\r\n            count:Yoga.WRAP_COUNT,\r\n            \"no-wrap\":Yoga.WRAP_NO_WRAP,\r\n            wrap:Yoga.WRAP_WRAP,\r\n            \"wrap-reverse\":Yoga.WRAP_WRAP_REVERSE,\r\n        }\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * Application entry point\r\n * @author Shane Harris\r\n */\r\nimport {Utils} from \"./utils\";\r\n\r\nlet version = require('./../package.json').version;\r\nconsole.log('aframe-material-collection version '+version);\r\n\r\nif (typeof AFRAME === 'undefined') {\r\n    throw 'aframe-material-collection requires AFRAME to be loaded first. - <script src=\"https://aframe.io/releases/0.8.2/aframe.min.js\"></script>';\r\n}\r\nlet utils = new Utils();\r\n\r\nwindow.UI = {\r\n    // Utils\r\n    utils:utils,\r\n    // Primitives\r\n    a_ui_button: require('./primitives/button'),\r\n    a_ui_fab_button: require('./primitives/fab_button'),\r\n    a_ui_fab_button_small: require('./primitives/fab_button_small'),\r\n    a_ui_switch: require('./primitives/switch'),\r\n    a_ui_toast: require('./primitives/toast'),\r\n    a_ui_checkbox: require('./primitives/checkbox'),\r\n    a_ui_radio: require('./primitives/radio'),\r\n    a_ui_text_input: require('./primitives/text-input'),\r\n    a_ui_number_input: require('./primitives/number-input'),\r\n    a_ui_int_input: require('./primitives/int-input'),\r\n    a_ui_password_input: require('./primitives/password-input'),\r\n    a_ui_scroll_pane: require('./primitives/scroll-pane'),\r\n    a_ui_renderer: require('./primitives/renderer'),\r\n\r\n    // Components\r\n    text: require('./components/text'),\r\n    btn: require('./components/btn'),\r\n    icon: require('./components/icon'),\r\n    rounded: require('./components/rounded'),\r\n    ripple: require('./components/ripple'),\r\n    switch: require('./components/switch'),\r\n    toast: require('./components/toast'),\r\n    scroll_pane: require('./components/scroll-pane'),\r\n    mouse_shim: require('./components/mouse-shim'),\r\n    double_click: require('./components/double-click'),\r\n    checkbox: require('./components/checkbox'),\r\n    radio: require('./components/radio'),\r\n    border: require('./components/border'),\r\n    curvedPlane: require('./components/curved-plane'),\r\n    colorPicker: require('./components/color-picker'),\r\n    modal: require('./components/modal'),\r\n    renderer: require('./components/renderer'),\r\n    yoga_properties: require('./components/yoga'),\r\n};\r\n//module.exports = UI;\r\n\r\n","export class Utils{\r\n    constructor(){\r\n        this.changesDetected = [];\r\n        this.is_changeing = false;\r\n    }\r\n    isFirstOrLastChange(){\r\n        if(!this.is_changeing&&this.changesDetected.length){\r\n            this.scene.emit('ui-changing');\r\n            this.is_changeing = true;\r\n        }else if(this.is_changeing&&!this.changesDetected.length){\r\n            if(this.is_changeing){\r\n                this.scene.emit('ui-changing-stopped');\r\n                this.is_changeing = false;\r\n            }\r\n        }\r\n    }\r\n    preventDefault(e){\r\n        if(e.detail.preventDefault && typeof e.detail.preventDefault === \"function\"){\r\n            e.detail.preventDefault();\r\n        }\r\n    }\r\n    shorten(string,length){\r\n        return string.length>length?string.substr(0,length)+\"...\":string;\r\n    }\r\n    isChanging(scene,ref){\r\n        let index = this.changesDetected.indexOf(ref);\r\n        if(index===-1){\r\n            this.scene = this.scene||scene;\r\n            this.changesDetected.push(ref);\r\n            this.isFirstOrLastChange();\r\n        }\r\n    }\r\n    stoppedChanging(ref){\r\n        let index = this.changesDetected.indexOf(ref);\r\n        if(index>-1){\r\n            this.changesDetected.splice(index, 1)\r\n        }\r\n        this.isFirstOrLastChange();\r\n    }\r\n}"],"sourceRoot":""}